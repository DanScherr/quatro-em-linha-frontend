{"version":3,"file":"static/js/290.ad6ca05a.chunk.js","mappings":"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","sources":["pages/Game/components/ImportFichas.jsx","pages/Game/components/ModalFichasClassicas.jsx","pages/Game/components/ModalSelecaoDeTema.jsx","pages/Shared/Layout/components/Footer.jsx","pages/Shared/Layout/components/Header.jsx","pages/Shared/Layout/components/Regras.jsx","pages/Shared/Layout/components/MoneyRank/components/ModalCompraFicha.jsx","pages/Shared/Layout/components/Monetizacao.jsx","pages/Shared/Layout/components/MoneyRank/components/ModalCarteira.jsx","pages/Shared/Layout/components/MoneyRank/MoneyRanking.jsx","pages/Shared/Layout/index.jsx"],"sourcesContent":["import rey from './../../../static/images/fichas/star-wars/rey.png';\nimport jedi from './../../../static/images/fichas/star-wars/jedi.png';\nimport jangofett from './../../../static/images/fichas/star-wars/jangofett.png';\nimport luke from './../../../static/images/fichas/star-wars/luke.png';\nimport ahsoka from './../../../static/images/fichas/star-wars/ahsoka.png';\nimport grogu from './../../../static/images/fichas/star-wars/grogu.png';\nimport galacticempirelogo from './../../../static/images/fichas/star-wars/galacticempireLogo.png';\nimport rebellogo from './../../../static/images/fichas/star-wars/rebelLogo.png';\nimport darthvader from './../../../static/images/fichas/star-wars/darthvader.png';\nimport chewbaca from './../../../static/images/fichas/star-wars/chewbaca.png';\nimport virgem from './../../../static/images/fichas/signos/virgem.png';\nimport leao from './../../../static/images/fichas/signos/leao.png';\nimport cancer from './../../../static/images/fichas/signos/cancer.png';\nimport gemeos from './../../../static/images/fichas/signos/gemeos.png';\nimport aries from './../../../static/images/fichas/signos/aries.png';\nimport touro from './../../../static/images/fichas/signos/touro.png';\nimport aquario from './../../../static/images/fichas/signos/aquario.png';\nimport peixes from './../../../static/images/fichas/signos/peixes.png';\nimport capricornio from './../../../static/images/fichas/signos/capricornio.png';\nimport sagitario from './../../../static/images/fichas/signos/sagitario.png';\nimport escorpiao from './../../../static/images/fichas/signos/escorpiao.png';\nimport libra from './../../../static/images/fichas/signos/libra.png';\nimport natalatt from './../../../static/images/fichas/diversos/natal-att.png';\nimport verao from './../../../static/images/fichas/diversos/verao.png';\nimport pascoa from './../../../static/images/fichas/diversos/pascoa.png';\nimport halloween from './../../../static/images/fichas/diversos/halloween.png';\nimport lufalufa from './../../../static/images/fichas/harry-potter/lufa-lufa.png';\nimport corvinal from './../../../static/images/fichas/harry-potter/corvinal.png';\nimport sonserina from './../../../static/images/fichas/harry-potter/sonserina.png';\nimport grifinoria from './../../../static/images/fichas/harry-potter/grifinoria.png';\nimport saopaulo from './../../../static/images/fichas/futebol/sao-paulo.png';\nimport santos from './../../../static/images/fichas/futebol/santos.png';\nimport corinthians from './../../../static/images/fichas/futebol/corinthians.png';\nimport palmeiras from './../../../static/images/fichas/futebol/palmeiras.png';\nimport worf from './../../../static/images/fichas/star-trek/worf.png';\nimport troi from './../../../static/images/fichas/star-trek/troi.png';\nimport crusher from './../../../static/images/fichas/star-trek/crusher.png';\nimport data from './../../../static/images/fichas/star-trek/data.png';\nimport laforge from './../../../static/images/fichas/star-trek/laforge.png';\nimport picard from './../../../static/images/fichas/star-trek/picard.png';\nimport riker from './../../../static/images/fichas/star-trek/riker.png';\nimport trek1 from './../../../static/images/fichas/star-trek/trek1.png';\nimport trek2 from './../../../static/images/fichas/star-trek/trek2.png';\nimport trek3 from './../../../static/images/fichas/star-trek/trek3.png';\nimport dragonballz from './../../../static/images/fichas/dragon-ball/dragon-ball-z.png';\nimport esferadodragao from './../../../static/images/fichas/dragon-ball/esfera-do-dragao.png';\nimport radardodragao from './../../../static/images/fichas/dragon-ball/radar-do-dragao.png';\nimport uniformedesongoku from './../../../static/images/fichas/dragon-ball/uniforme-de-son-goku.png';\nimport uzumaki from './../../../static/images/fichas/naruto/uzumaki.png';\nimport sharigansasuke from './../../../static/images/fichas/naruto/sharingan-sasuke.png';\nimport uchiha from './../../../static/images/fichas/naruto/uchiha.png';\nimport sharigankakashi from './../../../static/images/fichas/naruto/sharingan-kakash.png';\nimport angemon from './../../../static/images/fichas/digimon/angemon.png';\nimport tailmon from './../../../static/images/fichas/digimon/tailmon.png';\nimport digivice from './../../../static/images/fichas/digimon/digivice.png';\nimport agumon from './../../../static/images/fichas/digimon/agumon.png';\nimport vaporeon from './../../../static/images/fichas/pokemon/vaporeon.png';\nimport pokebola from './../../../static/images/fichas/pokemon/pokebola.png';\nimport pikachu from './../../../static/images/fichas/pokemon/pikachu.png';\nimport charizard from './../../../static/images/fichas/pokemon/charizard.png';\nimport homemdeferro from './../../../static/images/fichas/marvel/homem-de-ferro.png';\nimport homemaranha from './../../../static/images/fichas/marvel/homem-aranha.png';\nimport capitaoamericaatt from './../../../static/images/fichas/marvel/capitao-america-att.png';\nimport marvelatt from './../../../static/images/fichas/marvel/marvel-att.png';\nimport batman from './../../../static/images/fichas/dc/batman.png';\nimport superman from './../../../static/images/fichas/dc/superman.png';\nimport flash from './../../../static/images/fichas/dc/flash.png';\nimport dccomicsatt from './../../../static/images/fichas/dc/dc-comics-att.png';\n\nexport const retornaImagemFicha= (nome) => {\n\n    switch (nome) {\n        case 'rey':\n            return rey;\n        case 'jedi':\n            return jedi;\n        case 'jangofett':\n            return jangofett;\n        case 'luke':\n            return luke; \n        case 'ahsoka':\n            return  ahsoka;\n        case 'grogu':\n            return  grogu;\n        case 'galacticempirelogo':\n            return  galacticempirelogo;\n        case 'rebellogo':\n            return  rebellogo;\n        case 'darthvader':\n            return  darthvader;\n        case 'chewbaca':\n            return  chewbaca;\n        case 'virgem':\n            return  virgem;\n        case 'leao':\n            return leao; \n        case 'cancer':\n            return  cancer;\n        case 'gemeos':\n            return  gemeos;\n        case 'aries':\n            return  aries;\n        case 'touro':\n            return  touro;\n        case 'aquario':\n            return  aquario;\n        case 'peixes':\n            return  peixes;\n        case 'capricornio':\n            return  capricornio;\n        case 'sagitario':\n            return  sagitario;\n        case 'escorpiao':\n            return  escorpiao;\n        case 'libra':\n            return  libra;\n        case 'natalatt':\n            return  natalatt;\n        case 'verao':\n            return  verao;\n        case 'pascoa':\n            return  pascoa;\n        case 'halloween':\n            return  halloween;\n        case 'lufalufa':\n            return  lufalufa;\n        case 'corvinal':\n            return  corvinal;\n        case 'sonserina':\n            return  sonserina;\n        case 'grifinoria':\n            return  grifinoria;\n        case 'saopaulo':\n            return  saopaulo;\n        case 'santos':\n            return  santos;\n        case 'corinthians':\n            return  corinthians;\n        case 'palmeiras':\n            return  palmeiras;\n        case 'worf':\n            return worf; \n        case 'troi':\n            return troi; \n        case 'crusher':\n            return  crusher;\n        case 'data':\n            return data; \n        case 'laforge':\n            return  laforge;\n        case 'picard':\n            return  picard;\n        case 'riker':\n            return  riker;\n        case 'trek1':\n            return  trek1;\n        case 'trek2':\n            return  trek2;\n        case 'trek3':\n            return  trek3;\n        case 'dragonballz':\n            return  dragonballz;\n        case 'esferadodragao':\n            return  esferadodragao;\n        case 'radardodragao':\n            return  radardodragao;\n        case 'uniformedesongoku':\n            return  uniformedesongoku;\n        case 'uzumaki':\n            return  uzumaki;\n        case 'sharigansasuke':\n            return  sharigansasuke;\n        case 'uchiha':\n            return  uchiha;\n        case 'sharigankakashi':\n            return  sharigankakashi;\n        case 'angemon':\n            return  angemon;\n        case 'tailmon':\n            return  tailmon;\n        case 'digivice':\n            return  digivice;\n        case 'agumon':\n            return  agumon;\n        case 'vaporeon':\n            return  vaporeon;\n        case 'pokebola':\n            return  pokebola;\n        case 'pikachu':\n            return  pikachu;\n        case 'charizard':\n            return  charizard;\n        case 'homemdeferro':\n            return  homemdeferro;\n        case 'homemaranha':\n            return  homemaranha;\n        case 'capitaoamericaatt':\n            return  capitaoamericaatt;\n        case 'marvelatt':\n            return  marvelatt;\n        case 'batman':\n            return  batman;\n        case 'superman':\n            return  superman;\n        case 'flash':\n            return  flash;\n        case 'dccomicsatt':\n            return  dccomicsatt;\n\n        default:\n            return nome;\n    }\n}","import { Avatar, Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\n\nexport default function ModalFichasClassicas( {setMostrar, setTemaState, disableButton, vsChosenTheme} ) {\n    return (\n        <div key={`modalSelecaoDeTema-Categoria-Classicos`}>\n            <Typography\n                sx={{\n                    borderRadius: 60,\n                    color: 'font.emphasis',\n                    mt: 2,\n                    backgroundColor: 'background.accordionHeader'\n                }}\n            >\n                {'CLÁSSICOS'}\n            </Typography>\n            <Grid container justifyContent={'center'} spacing={1} sx={{mt: 1}}>\n                {['red','yellow'].map((tema, index) => {\n                    return (\n                        <Grid item key={`modalSelecaoDeTema-Tema-${index}`} xs={3}>\n                            <Box sx={{mb: 1}}>\n                                <Tooltip followCursor arrow title={`${tema.charAt(0).toUpperCase() + tema.slice(1)}`} placement=\"top\">\n                                    <Button\n                                        disabled={!disableButton || (vsChosenTheme === tema)}\n                                        sx={{borderRadius: 60}}\n                                        onClick={() => {setMostrar(false); setTemaState(tema)} }\n                                    >\n                                        <Avatar alt=\"tema.titulo\"\n                                            sx={{border: '1px solid white',\n                                            backgroundColor: tema,\n                                            color: tema\n                                            }}\n                                        />\n                                    </Button>\n                                </Tooltip>\n                                <Typography>\n                                    {tema}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </div>\n    )\n}","import { Avatar, Box, Button, Grid, List, Modal, Skeleton, Tooltip, Typography } from '@mui/material'\nimport React, { useContext, useEffect } from 'react';\nimport ModalFichasClassicas from './ModalFichasClassicas';\nimport AuthContext from '../../../context/AuthContext';\nimport { retornaImagemFicha } from './ImportFichas';\nimport MultiplayerContext from '../../../context/MultiplayerContext';\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1000'\n}\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n}\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)'\n}\n\nconst GIF_STYLE = {\n  textAlign: 'center',\n  paddingTop: '10px'\n}\n\nexport function ModalSelecaoDeTema({ mostrar, setMostrar, setChosenState, setTemaState, vsChosenTheme, setCategoriaTemaState}) {\n    let basePathImages = './../../../static/images/fichas/';\n\n    const {\n        ConsultaUsuarioTemas, \n        usuarioTemas,\n        setOpenNotificacao\n    } = useContext(AuthContext);\n\n    const {\n        multiplayerEstabelecido\n    } = useContext(MultiplayerContext);\n\n    useEffect(() => {\n        ConsultaUsuarioTemas();\n    }, [])\n\n    useEffect(() => {\n        if (mostrar && !multiplayerEstabelecido) {\n            setOpenNotificacao({\n                msg: 'Esperando jogador entrar na sala...',\n                open: true,\n                severity: 'warning'\n            });\n        };\n    }, [mostrar]);\n\n    useEffect(() => {\n        if (multiplayerEstabelecido) {\n            setOpenNotificacao({\n                msg: 'Escolha sua ficha e jogue!',\n                open: true,\n                severity: 'success'\n            });\n        };\n    }, [multiplayerEstabelecido]);\n\n    return (\n      <Modal open={mostrar} style={BACKGROUND_STYLE}>\n        <div style={MODAL_STYLE}>\n          <div style={TITLE_STYLE}>\n            <Typography sx={{\n                color: 'font.emphasis',\n                fontSize: 23,\n                fontWeight: 550,\n                letterSpacing: 2\n            }}>\n                {'SELECIONE SEU TEMA'}\n            </Typography>\n            {/* <p>{!isVencedor ?? 'Revanche?'}</p> */}\n          </div>\n          <div style={GIF_STYLE} className='mt-4'>\n                <List\n                    sx={{\n                        borderRadius: 7,\n                        width: '100%',\n                        maxWidth: 480,\n                        position: 'relative',\n                        overflow: 'auto',\n                        maxHeight: 350,\n                        padding: 0,\n                        '& ul': { padding: 0 },\n                        mt: 0,\n                        backgroundColor: 'background.card',\n                        pb: 2,\n                        px: 2,\n                        mx: 'auto',\n                        boxShadow: 'rgba(255, 255, 255, 0.25) 0px 0px 0.25em, rgba(90, 125, 188, 0.05) 0px 0.25em 1em;'\n                    }}\n                >\n                    <ModalFichasClassicas setMostrar={setMostrar} setTemaState={setTemaState} disableButton={multiplayerEstabelecido} vsChosenTheme={vsChosenTheme} />\n                    { !usuarioTemas.loading ?\n                        usuarioTemas.data.map((item, index) => {\n                            return (\n                                <div key={`modalSelecaoDeTema-Categoria-${index}`}>\n                                    <Typography\n                                        sx={{\n                                            borderRadius: 60,\n                                            color: 'font.emphasis',\n                                            mt: 2,\n                                            backgroundColor: 'background.accordionHeader'\n                                        }}\n                                    >\n                                        {item.categoria}\n                                    </Typography>\n                                    <Grid container spacing={1} sx={{mt: 1}}>\n                                        {item.temas.map((tema, index) => {\n                                            return (\n                                                <Grid item key={`modalSelecaoDeTema-Tema-${index}`} xs={3}>\n                                                    <Box sx={{mb: 1}}>\n                                                        <Tooltip followCursor arrow title={`${tema.nome.charAt(0).toUpperCase() + tema.nome.slice(1)}`} placement=\"top\">\n                                                            <Button \n                                                                    disabled={!multiplayerEstabelecido || (vsChosenTheme === tema.nome.toLowerCase()) || vsChosenTheme === retornaImagemFicha(geraPathTema(tema))}\n                                                                    sx={{borderRadius: 60}}\n                                                                    onClick={() => {setMostrar(false); setTemaState(retornaImagemFicha(geraPathTema(tema))); setCategoriaTemaState(item.categoria);} }\n                                                                >\n                                                                    <Avatar alt=\"\" src={retornaImagemFicha(geraPathTema(tema)) === \"\" ? geraPathTema(tema) : retornaImagemFicha(geraPathTema(tema))}\n                                                                        sx={{border: '1px solid white',\n                                                                        color: 'font.main',\n                                                                        }}\n                                                                    />\n                                                                </Button>\n                                                                <Typography>\n                                                                    {tema.titulo}\n                                                                </Typography>\n                                                        </Tooltip>\n                                                    </Box>\n                                                </Grid>\n                                            );\n                                        })}\n                                    </Grid>\n                                </div>\n                            )\n                        })\n                        :\n                        <div key={`modalSelecaoDeTema-Carregando-Categoria`}>\n                            <Typography\n                                sx={{\n                                    borderRadius: 60,\n                                    color: 'font.emphasis',\n                                    mt: 2,\n                                    backgroundColor: 'background.accordionHeader'\n                                }}\n                            >\n                                {'Carregando...'}\n                            </Typography>\n                            <Grid container spacing={1} sx={{mt: 1, height: '150px'}}>\n                            {\n                                [0,1,2,3].map((i, j) => {return (\n                                    <Grid item key={`modalSelecaoDeTema-Carregando-Tema-${j}`} xs={3}>\n                                        <Box sx={{mb: 1}}>\n                                            <Skeleton variant=\"circular\" width={47} height={47} sx={{mx: 'auto'}} />\n                                        </Box>\n                                    </Grid>\n                                )})\n                            }\n                            </Grid>\n                        </div>\n                }\n                </List>\n          </div>\n        </div>\n      </Modal>\n    );\n};\n\nexport const geraPathTema = (tema) => {\n    let nome = tema.imagem?.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").split(' ').join('').split('-').join('').replace('.png', '');\n\n    if (tema.imagem && tema.imagem.startsWith('https')) {\n        return tema.imagem;\n    } else {\n        return nome;\n    }    \n};","//@ts-check\n/** State */\nimport React, { useContext } from 'react';\n/** MUI */\nimport { \n    Box,\n    Grid,\n    Paper\n} from '@mui/material';\nimport MultiplayerContext from '../../../../context/MultiplayerContext';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport './Footer.css'\n\n\nexport default function SharedLayoutFooter( ) {\n    const {\n        stopWatch,\n        myTurn,\n        myChosenTheme,\n        vsChosenTheme,\n        vencedorState,\n        empateState,\n        loserState\n    } = useContext(MultiplayerContext);\n\n    return(\n        <>  \n            <Box sx={{\n                color: 'primary.lightMain', \n                bgcolor: 'background.footBox', \n                boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n                height: '40px',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }}\n            >\n                <Grid container justifyContent={'center'} alignContent={'center'}>\n                    <Grid item xs={0.15} alignContent={'flex-end'}>\n                        &#32;\n                    </Grid>\n                    <Grid item xs={0.3} alignContent={'flex-end'}>\n                        <TimerIcon className={myTurn \n                        &&(myChosenTheme !== 'grey' && myChosenTheme !== '')&&vsChosenTheme!==''\n                        &&!vencedorState&&!empateState&&!loserState\n                        ? 'blink' : ''} sx={{mt: 1, display: {xs: 'none', md: 'none', lg: 'flex'}}}\n                        />\n                    </Grid>\n                    <Grid item xs={0.9}>\n                        <Paper sx={{\n                            display: 'inline-block', width: '100px',\n                            height: '35px', lineHeight: '35px',\n                            mt: '1px',\n                            textAlign: 'center', fontSize: '18px'\n                        }}> {stopWatch} </Paper>\n                    </Grid>\n                    <Grid item xs={0.001} alignContent={'flex-end'}>\n                        &#32;\n                    </Grid>\n                    <Grid item xs={0.3} alignContent={'flex-end'}>\n                        <TimerIcon className={myTurn \n                        &&(myChosenTheme !== 'grey' && myChosenTheme !== '')&&vsChosenTheme!==''\n                        &&!vencedorState&&!empateState&&!loserState\n                        ? 'blink' : ''} sx={{mt: 1, display: {xs: 'none', md: 'none', lg: 'flex'}}}\n                        />\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n};","//@ts-check\n/** State */\nimport React, { useContext, useState } from 'react';\n/** Navigate */\nimport { useNavigate } from 'react-router-dom';\n/** MUI */\nimport { \n    AppBar, \n    Toolbar, \n    Container, \n    Typography, \n    Box, \n    Slide, \n    useScrollTrigger, \n    IconButton, \n    Menu, \n    MenuItem, \n    Tooltip, \n    Avatar,\n    Button,\n    Icon,\n} from '@mui/material';\nimport ExtensionIcon from '@mui/icons-material/Extension';\nimport MenuIcon from '@mui/icons-material/Menu';\n/** Assets */\nimport profileImg from './../../../../static/images/avatar/logo-profile-01.png'\nimport AuthContext from '../../../../context/AuthContext';\nimport icon from './../../../../static/images/icon/logo192.png'\n\nexport default function SharedLayoutHeader( ) {\n    const {RealizaLogout} = useContext(AuthContext)\n\n    /** Hide Bar when Scroll */\n    const trigger = useScrollTrigger();\n\n    /** Responsive Bar */\n    const [anchorElNav, setAnchorElNav] = useState(null);\n    const [anchorElUser, setAnchorElUser] = useState(null);\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    /** Navigate */\n    const navigate = useNavigate();\n    const navegarPagina = ((page) => {\n        navigate(`/${page}`)\n        if (page === '') window.location.reload();\n    })\n\n    /** Mockup */\n    let paginas = [ 'jogue', 'sobre' ]\n    let configuracao = [ 'logout' ]\n\n    return(\n        <>\n            <Slide appear={false} direction='down' in={!trigger}>\n                <AppBar sx={{color: 'primary.main', bgcolor: 'background.navBar'}}  >\n                    <Container maxWidth=\"xl\" >\n                        <Toolbar disableGutters variant=\"dense\">\n\n                            {/** BIG SCREENS */}\n                            {/** Logo */}\n                            <Box sx={{display: { xs: 'none', md: 'flex' }, flexGrow: 1}}>\n                                <Button onClick={() => navegarPagina('/')} >\n                                    <Icon \n                                        sx={{ \n                                            display: { xs: 'none', md: 'flex'}, \n                                            mr: 1, fontSize: '30px',\n                                            backgroundImage: `url(${icon})`,\n                                            backgroundSize: 'contain',\n                                            backgroundRepeat: 'no-repeat'\n                                        }} \n                                    />\n                                    <Typography\n                                        variant=\"h6\"\n                                        noWrap\n                                        component=\"a\"\n                                        href=\"/\"\n                                        sx={{\n                                        display: { xs: 'none', md: 'flex' },\n                                        fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif',\n                                        fontSize: '17px',\n                                        fontWeight: '700',\n                                        letterSpacing: '.2rem',\n                                        color: 'inherit',\n                                        textDecoration: 'none',\n                                        }}\n                                    >\n                                        4em'\n                                    </Typography>\n                                </Button>\n                            </Box>\n                            {/** Paginas */}\n                            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                                {paginas.map((page, index) => (\n                                <Button\n                                    key={`${page}`}\n                                    onClick={() => navegarPagina(page==='jogue'? '' : page)}\n                                    sx={{ \n                                        my: 'auto', color: 'primary.lightMain',  mr: 2,\n                                        display: 'block', fontSize: '13px',\n                                        fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif',\n                                        fontWeight: 700\n                                    }}\n                                >\n                                    {`${page}`}\n                                </Button>\n                                ))}\n                            </Box>\n\n                            {/** SMALL SCREENS */}\n                            {/** Menu */}\n                            <Box sx={{ \n                                flexGrow: 2,\n                                display: { xs: 'flex', md: 'none' },\n                            }}>\n                                <IconButton \n                                    size=\"large\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleOpenNavMenu}\n                                    color=\"inherit\"\n                                    \n                                >\n                                    <MenuIcon sx={{\n                                        color: 'primary.lightestMain'\n                                    }}/>\n                                </IconButton>\n                                <Menu\n                                    id='menu-appbar'\n                                    anchorEl={anchorElNav}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                    open={Boolean(anchorElNav)}\n                                    onClose={handleCloseNavMenu}\n                                    sx={{ \n                                        display: {xs: 'block', md: 'none'}\n                                    }}\n                                >\n                                    {paginas.map((page, index) => (\n                                        <MenuItem key={`${page}`} onClick={() => console.log(`tela pequena pagina`)} sx={{\n                                            color: 'primary.lightestMain',\n                                        }}\n                                        >\n                                            <Typography textAlign=\"center\">{`${page}`}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                                {/** Logo */}\n                                <ExtensionIcon sx={{my: 'auto'}} />\n                            </Box>\n\n                            {/** BIG & SMALL SCREENS */}\n                            {/** Avatar */}\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"User Options\">\n                                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                                        <Avatar alt=\"Avatar\" src={profileImg} sx={{ width: 50, height: 50 }} />\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: '45px' }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                    >\n                                    {configuracao.map((setting) => (\n                                        <MenuItem key={setting} onClick={() => {handleCloseUserMenu(); RealizaLogout(); window.location.reload();}} \n                                            sx={{\n                                                color: 'font.emphasis',\n                                            }}>\n                                            <Typography textAlign=\"center\" sx={{color: 'primary.lightestMain'}} >\n                                                {setting}\n                                            </Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                        </Toolbar>\n                    </Container>\n                </AppBar>\n            </Slide>\n            <Box sx={{height: 50}} />\n        </>\n    )\n}","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@mui/material\";\nimport { useSpring, animated } from \"react-spring\";\nimport MultiplayerContext from \"../../../../context/MultiplayerContext\";\nimport AuthContext from \"../../../../context/AuthContext\";\n\nconst imagemPadrao =\n  \"./../../../../static/images/propaganda/propaganda-0.png\";\n\nexport default function Regras() {\n  const { ComecarStopWatch, cronometro } = useContext(MultiplayerContext);\n  const { propagandaData } = useContext(AuthContext);\n  const [propagandas, setPropagandas] = useState([]);\n  const [index, setIndex] = useState(0);\n\n  const props = useSpring({\n    opacity: 1,\n    from: { opacity: 0 },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await propagandaData();\n        \n        setPropagandas((existingPropagandas) => [\n          ...existingPropagandas,\n          ...(data || []),\n          { imagem_Anun: require(\"./../../../../static/images/propaganda/propaganda-0.png\") },\n          { imagem_Anun: require(\"./../../../../static/images/propaganda/propaganda-1.png\") },\n          // Adicione mais imagens locais conforme necessário\n        ]);\n\n      } catch (error) {\n        console.error(\"Erro ao carregar propagandas:\", error);\n\n        setPropagandas([\n          { imagem_Anun: require(\"./../../../../static/images/propaganda/propaganda-0.png\") },\n          { imagem_Anun: require(\"./../../../../static/images/propaganda/propaganda-1.png\") },\n          // Adicione mais imagens locais conforme necessário\n        ]);\n      } finally {\n        /*ComecarStopWatch(3);*/\n      }\n    };\n\n    fetchData();\n  }, [propagandaData, ComecarStopWatch]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIndex((prevIndex) => (prevIndex + 1) % propagandas.length);\n    }, 5000); // Troca de imagem a cada 5 segundos (ajuste conforme necessário)\n\n    return () => clearInterval(interval);\n  }, [propagandas]);\n\n  return (\n    <Card\n      sx={{\n        height: \"515px\",\n        backgroundColor: \"background.card\",\n        borderRadius: 5,\n        mt: 6.6,\n        position: \"relative\",\n      }}\n    >\n      <CardContent\n        sx={{\n          p: 3,\n          position: \"absolute\",\n          top: \"50%\",\n          msTransform: \"translateY(-50%)\",\n          transform: \"translateY(-50%)\",\n        }}\n      >\n        <Card\n          sx={{\n            height: \"100%\",\n            m: 2,\n            display: \"block\",\n            borderRadius: 5,\n            my: \"auto\",\n          }}\n        >\n          <CardContent sx={{ p: 2, my: \"auto\" }}>\n            <div\n              id=\"carouselExampleSlidesOnly\"\n              className=\"carousel slide\"\n              data-bs-ride=\"carousel\"\n            >\n              <animated.div\n                className=\"carousel-inner\"\n                style={{ ...props, width: \"100%\" }}\n              >\n                {propagandas.map((item, i) => (\n                  <animated.div\n                    key={i}\n                    className={i === index ? \"carousel-item active\" : \"carousel-item\"}\n                    style={{ ...props }}\n                  >\n                    <img\n                      src={item.imagem_Anun || imagemPadrao}\n                      width=\"100%\"\n                      height=\"400px\"\n                      className=\"d-block w-100\"\n                      alt={`Imagem ${i}`}\n                      style={{ opacity: props.opacity }}\n                    />\n                  </animated.div>\n                ))}\n              </animated.div>\n            </div>\n          </CardContent>\n        </Card>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Avatar, Box, Button, Grid, Modal } from '@mui/material'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Typography } from \"@mui/material\";\nimport AuthContext from '../../../../../../context/AuthContext';\nimport { retornaImagemFicha } from '../../../../../Game/components/ImportFichas';\nimport { geraPathTema } from '../../../../../Game/components/ModalSelecaoDeTema';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\n\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1001'\n}\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n}\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)'\n}\n\nexport function ModalCompraFicha({ mostrar, setMostrar, item, tema }) {\n    const {\n        AlteraCarteira,\n        setOpenNotificacao,\n        carteira,\n        CompraFicha\n    } = useContext(AuthContext);\n    \n    useEffect(() => {\n        console.log('tema:', tema)\n    }, [])\n    \n    let basePathImages = './../../../static/images/fichas/';\n    // VARIAVEIS DO FORMULARIO\n    const resolveClick = (e) => {\n        console.log(`Carteira: ${(carteira)} Tema valor: ${Number(tema.valor)}`)\n        if (Number(carteira) - Number(tema.valor) >= 0){\n            AlteraCarteira(Number(carteira) - Number(tema.valor));\n            CompraFicha(tema.id_Mon);\n            window.location.reload();\n            setOpenNotificacao({\n                msg: 'Compra realizada com sucesso!',\n                open: true,\n                severity: 'success'\n            });\n        }\n        else\n            setOpenNotificacao({\n                msg: 'Sua carteira precisa ter saldo suficiente.',\n                open: true,\n                severity: 'error'\n            });\n    };\n\n    return (\n        <Modal open={mostrar} style={BACKGROUND_STYLE} onClose={() => setMostrar(false)}>\n        <div style={MODAL_STYLE}>\n            <div style={TITLE_STYLE}>\n                {/* Titulo */}\n                <Typography variant='span'\n                sx={{\n                    color: 'font.emphasis',\n                    fontSize: 23,\n                    fontWeight: 550,\n                    letterSpacing: 2,\n                    mb: 5\n                }}>\n                    {'COMPRAR FICHA:'}\n                </Typography>\n            \n                <Grid container justifyContent={'center'}>\n                    <Grid item xs={12}>\n                        <Avatar\n                            alt=\"tema.titulo\" \n                            src={retornaImagemFicha(geraPathTema(tema)) === \"\" ? geraPathTema(tema) : retornaImagemFicha(geraPathTema(tema))}\n                            sx={{\n                                border: '1px solid white',\n                                color: 'font.main',\n                                mx: 'auto',\n                                height: '150px',\n                                width: '150px',\n                                mt: 5\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sx={{mt: 2}}>\n                        <Typography variant='span'\n                        sx={{\n                            mt: 5,\n                            fontFamily: 'Play',\n                            fontSize: '20px',\n                            LineWeight: '23px',\n                            textAlign: 'left',\n                            color: 'font.main',\n                            display: 'inline',\n                            maxHeight: '300px',\n                            wordBreak: 'break-all'\n                        }}>\n                            {tema.descricao}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sx={{mt: 2}}>\n                        <MonetizationOnIcon fontSize='large' sx={{\n                            color: '#FADB37', \n                            display: 'inline', \n                            ml: 0\n                        }}/>\n                        <Typography variant='span'\n                        sx={{\n                            mt: 5,\n                            ml: 1,\n                            fontFamily: 'Play',\n                            fontSize: '20px',\n                            LineWeight: '23px',\n                            textAlign: 'left',\n                            color: 'font.main',\n                            display: 'inline'\n                        }}>\n                            {tema.valor?.toString() + ',00'}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button \n                            onClick={() => resolveClick()}\n                            variant='contained' \n                            sx={{\n                                mx: 'auto', \n                                mt: 10, \n                                color: 'font.emphasis'\n                            }}\n                    >\n                        {'EFETUAR COMPRA'}\n                    </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n        </Modal>\n    );\n};","import { Card, CardContent, Grid, Typography, Button, Accordion, AccordionSummary, List, AccordionDetails, Avatar, Box } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport './Monetizacao.css'\nimport imgDefault from './../../../../static/images/default-image-icon.png';\nimport AuthContext from \"../../../../context/AuthContext\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { retornaImagemFicha } from \"../../../Game/components/ImportFichas\";\nimport {geraPathTema} from './../../../Game/components/ModalSelecaoDeTema'\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport { ModalCompraFicha } from \"./MoneyRank/components/ModalCompraFicha\";\n\n\nexport default function Monetizacao(  ) {\n    const {todosTemas, BuscaTemas} = useContext(AuthContext);\n    const [open, setOpen] = useState(false);\n    const [itemFicha, setitemFicha] = useState({});\n    const [temaFicha, settemaFicha] = useState('');\n\n    useEffect(() => {\n        BuscaTemas();\n    }, []);\n\n    let basePathImages = './../../../static/images/fichas/';\n    return (\n        <Card sx={{\n            height: '515px', \n            backgroundColor: 'background.card',\n            borderRadius: 5,\n            mt: 1\n        }}>\n            <CardContent>\n                {/** PAGOS */}\n                <Typography variant=\"span\" sx={{\n                    textAlign: 'start', fontSize: '25px',\n                    color: 'primary.lightMain', fontWeight: '700'\n                }}>\n                    Temas Pagos\n                </Typography>\n                <List\n                    sx={{\n                        width: '100%',\n                        maxWidth: 360,\n                        position: 'relative',\n                        overflow: 'auto',\n                        maxHeight: 550,\n                        padding: 0,\n                        '& ul': { padding: 0 },\n                        mt: 0\n                    }}\n                >\n                    { !todosTemas.loading ?\n                        todosTemas.data.map((item, i) => {\n                            return (\n                                <Accordion \n                                    key={`MonetizacaoArrayAccordionHeader-${i}`}\n                                    className=\"MonetizacaoArrayAccordion\"\n                                    sx={{backgroundColor: 'background.accordionHeader'}}\n                                >\n                                    <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id={item.categoria}\n                                        sx={{mt: 2}}\n                                    >\n                                        <Typography variant=\"span\" sx={{fontSize: 14, color: '#000000e4', fontWeight: '700'}}>\n                                            {item.categoria}\n                                        </Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails sx={{paddingTop: 0}}>\n                                        <Typography variant=\"span\">\n                                            <Grid container spacing={2} sx={{pl: 2}}>\n                                                {item.temas.map((tema, j) => {\n                                                    return (\n                                                        <Grid item key={`MonetizacaoArrayAccordionTema-${j}`} xs={6}>\n                                                            <Typography variant=\"span\" textAlign={'center'}>\n\n                                                                    <Box sx={{mb: 1}}>\n                                                                        <ModalCompraFicha item={itemFicha} tema={temaFicha} setMostrar={setOpen} mostrar={open}/>\n                                                                        <Button sx={{borderRadius: 5}} onClick={() => {setOpen(true); setitemFicha(item); settemaFicha(tema)}}>\n                                                                            <Grid container justifyContent={'center'}>\n                                                                                <Grid item xs={12}>\n                                                                                    <Avatar alt=\"tema.titulo\" src={retornaImagemFicha(geraPathTema(tema)) === \"\" ? geraPathTema(tema) : retornaImagemFicha(geraPathTema(tema))}\n                                                                                        sx={{\n                                                                                            border: '1px solid white',\n                                                                                            color: 'font.main',\n                                                                                            mx: 'auto'\n                                                                                        }}\n                                                                                    />\n                                                                                </Grid>\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography variant=\"span\" sx={{\n                                                                                        color: 'font.emphasis', \n                                                                                        maxWidth: '110px', \n                                                                                        wordBreak: 'break-all',\n                                                                                        fontSize: \"12px\"\n                                                                                    }}>\n                                                                                        {tema.nome}\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                                <Grid item xs={12}>\n                                                                                    <MonetizationOnIcon fontSize='small' sx={{\n                                                                                        color: '#FADB37', \n                                                                                        display: 'inline', \n                                                                                        ml: 0\n                                                                                    }}/>\n                                                                                    <Typography variant=\"span\" sx={{\n                                                                                        color: 'font.emphasis', \n                                                                                        maxWidth: '110px', \n                                                                                        wordBreak: 'break-all',\n                                                                                        display: 'inline',\n                                                                                        ml: 0.2,\n                                                                                        my: 'auto'\n                                                                                    }}>\n                                                                                        {tema.valor}\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Button>\n                                                                    </Box>\n                                                                \n                                                            </Typography>\n                                                        </Grid>\n                                                    );\n                                                })}\n                                            </Grid>\n                                        </Typography>\n                                    </AccordionDetails>\n                                </Accordion>\n                            )\n                        })\n                    :\n                    'Carregando...'\n                    }\n                    \n                    <div style={{height: '100px', display: 'block'}}>\n                        {''}\n                    </div>\n                    \n                </List>\n            </CardContent>          \n        </Card>\n    );\n};","import { Button, Grid, Modal } from '@mui/material'\nimport React, { useContext, useEffect, useState } from 'react';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport { Stack, Typography } from \"@mui/material\";\nimport TextField from '@mui/material/TextField';\nimport AuthContext from '../../../../../../context/AuthContext';\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1002'\n};\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n};\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)'\n};\n\nexport function ModalCarteira({ mostrar, setMostrar }) {\n\n    const {\n        carteira,\n        AlteraCarteira,\n        ConsultaCarteira, \n        setOpenNotificacao,\n        obterCotacaoDoBancoDeDados,\n    } = useContext(AuthContext);\n\n    // VARIAVEIS DO FORMULARIO\n    const [moedas, setMoedas] = useState(0);\n    const [real, setReal] = useState(0);\n    const [cotacao, setCotacao] = useState(null);\n\n    useEffect(() => {\n        const fetchCotacao = async () => {\n            try {\n                const cotacaoDoBanco = await obterCotacaoDoBancoDeDados();\n                setCotacao(cotacaoDoBanco || []);\n            } catch (error) {\n                console.error('Erro ao obter cotação do banco de dados:', error);\n            }\n        };\n\n        fetchCotacao();\n    }, []);\n\n    const handleInputs = (e) => {\n        e.preventDefault();\n        let varMoedas = e.target.value;\n        let soma = parseInt(carteira) + parseInt(varMoedas);\n        setMoedas(soma);\n        setReal((cotacao*varMoedas) / 100);\n    };\n\n\n\n    const resolveClick = () => {\n        AlteraCarteira(moedas);\n        ConsultaCarteira();\n        setOpenNotificacao({\n            msg: 'Compra realizada com sucesso!',\n            open: true,\n            severity: 'success'\n        });\n    };\n\n    return (\n      <Modal open={mostrar} style={BACKGROUND_STYLE} onClose={() => setMostrar(false)}>\n        <div style={MODAL_STYLE}>\n            <div style={TITLE_STYLE}>\n                {/* Titulo */}\n                <Typography variant='span'\n                sx={{\n                    color: 'font.emphasis',\n                    fontSize: 23,\n                    fontWeight: 550,\n                    letterSpacing: 2,\n                    mb: 5\n                }}>\n                    {'COMPRAR CRÉDITOS:'}\n                </Typography>\n                {/* Subtitulo */}\n                <Typography variant='span'\n                sx={{\n                    ml: 5,\n                    mt: 3,\n                    fontFamily: 'Play',\n                    fontSize: '20px',\n                    fontWeight: 700,\n                    LineWeight: '23px',\n                    textAlign: 'left',\n                    color: 'font.emphasis',\n                    display: 'block'\n                }}>\n                    {'Cotação'}\n                </Typography>\n                <Typography variant='span'\n                sx={{\n                    mt: 5,\n                    ml: 5,\n                    fontFamily: 'Play',\n                    fontSize: '20px',\n                    LineWeight: '23px',\n                    textAlign: 'left',\n                    color: 'font.main',\n                    display: 'inline'\n                }}>\n                    {cotacao ? `R$ ${cotacao.toFixed(2)}` : 'Carregando...'}\n                </Typography>\n                <Typography variant='span'\n                sx={{\n                    mt: 5,\n                    ml: 5,\n                    fontFamily: 'Play',\n                    fontSize: '20px',\n                    LineWeight: '23px',\n                    textAlign: 'left',\n                    color: 'font.main',\n                    display: 'inline'\n                }}>\n                    {'='}\n                </Typography>\n                <MonetizationOnIcon fontSize='large' sx={{\n                    color: '#FADB37', \n                    display: 'inline', \n                    ml: 5\n                }}/>\n                <Typography variant='span'\n                sx={{\n                    mt: 5,\n                    ml: 5,\n                    fontFamily: 'Play',\n                    fontSize: '20px',\n                    LineWeight: '23px',\n                    textAlign: 'left',\n                    color: 'font.main',\n                    display: 'inline'\n                }}>\n                    {'100,00'}\n                </Typography>\n            </div>\n\n            {/* INPUTS DO USUARIO */}\n            <Grid container>\n                <Grid item xs={6} sx={{p: 5}}>\n                <Stack>\n                    {/* TITULO */}\n                    <Typography variant='span'\n                    sx={{my: 2, mx: \"auto\", fontSize: `17px`, color: 'font.emphasis'}}>\n                        MOEDAS\n                    </Typography>\n\n                    {/* NUMERO DE MOEDAS */}\n                    <TextField\n                        id=\"outlined-number\"\n                        label=\"\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        onChange={handleInputs}\n                    />\n                </Stack>\n                </Grid>\n                <Grid item xs={6} sx={{p: 5}}>\n                    <Stack>\n                        {/* TITULO */}\n                        <Typography variant='span'\n                        sx={{my: 2, mx: \"auto\", fontSize: `17px`, color: 'font.emphasis'}}>\n                            VALOR A PAGAR R$\n                        </Typography>\n\n                        {/* QUANTIDADE REAL */}\n                        <TextField\n                            disabled\n                            id=\"outlined-number\"\n                            label=\"Real\"\n                            value={real}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </Stack>\n                </Grid>\n            </Grid>\n\n            {/* Button */}\n            <Grid container justifyContent={'center'}>\n                <Grid item xs={2}>\n                    <Button \n                        onClick={resolveClick}\n                        variant='contained' \n                        sx={{\n                            mx: 'auto', \n                            mt: 10, \n                            color: 'font.emphasis'\n                        }}\n                    >\n                        COMPRAR\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n      </Modal>\n    );\n};","import { CardContent, Grid, Tooltip, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../../../../context/AuthContext\";\nimport { ModalCarteira } from \"./components/ModalCarteira\";\nimport AddIcon from '@mui/icons-material/Add';\n\nexport default function MoneyRanking( {} ) {\n    const {\n        ConsultaCarteira,\n        carteira\n    } = useContext(AuthContext);\n\n    useEffect(() => {\n        ConsultaCarteira();\n    }, []);\n\n    useEffect(() => {\n        console.log('Carteira no componente:', carteira)\n    }, [carteira]);\n\n    const [openFicha, setOpenFicha] = useState(false)\n\n    return (\n        <CardContent sx={{height: '50px', pl: 0, pt: 0, pb: 2}}>\n            <Grid container columnSpacing={5} sx={{width: '400px'}}>\n                <Grid item xs={0} md={3} ml={0} sx={{width: '300px'}}>\n                    <ModalCarteira mostrar={openFicha} setMostrar={setOpenFicha} />\n                    <Tooltip followCursor arrow title={`Comprar moedas`} placement=\"top\">\n                        <Button alignContent='center' onClick={() => setOpenFicha(true)}>\n                            <MonetizationOnIcon fontSize='large' sx={{color: '#FADB37', display: 'inline'}}/>\n                            <Typography variant=\"span\" sx={{display: 'inline', ml: 1, color: '#B8B2B8'}}>\n                                {`${carteira},00`}\n                            </Typography>\n                            <AddIcon fontSize='large' sx={{\n                                    color: 'primary.main', display: 'inline',\n                                    border: '1px solid #d500f9',\n                                    borderRadius: 2,\n                                    ml: 2\n                                }} />\n                        </Button>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        </CardContent>\n    )\n}","import * as React from 'react';\nimport { Box, Grid } from \"@mui/material\";\nimport SharedLayoutFooter from \"./components/Footer\";\nimport SharedLayoutHeader from \"./components/Header\";\nimport { Outlet } from \"react-router-dom\";\nimport \"./index.css\"\nimport Regras from \"./components/Regras\";\nimport Monetizacao from \"./components/Monetizacao\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport MoneyRanking from './components/MoneyRank/MoneyRanking';\nimport AuthContext from '../../../context/AuthContext';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function SharedLayout(  ) {\n    const {openNotificacao, setOpenNotificacao} = React.useContext(AuthContext);\n\n    return (\n        <Grid container alignItems={'center'} height={'100vh'}>\n            {/* Header */}\n            <SharedLayoutHeader />\n            \n            {/* Notificacao */}\n            <Snackbar \n                open={openNotificacao.open} \n                autoHideDuration={3000} \n                onClose={() => setOpenNotificacao((prev)=>({...prev, open:false}))}\n                sx={{\n                    position: \"absolute\",\n                    top: -600,\n                    left: '100%',\n                    display: 'flex'\n                }}\n            >\n                <Alert \n                    onClose={() => setOpenNotificacao(false)} \n                    severity={openNotificacao.severity} \n                    sx={{ width: '100%' }}\n                >\n                    {openNotificacao.msg}\n                </Alert>\n            </Snackbar>\n\n            {/* Conteudo tela X-Grande */}\n            <Grid container columnSpacing={{sm: 2}}\n                sx={{\n                    justifyContent: 'center', alignContent: 'center', verticalAlign: 'center', my: 'auto',\n                    display: {xs: 'none', md: 'none', lg: 'none', xl: 'flex'}, width: '100%'\n                }}\n            >\n                <Grid item lg={3} className=\"ShareLayoutGrid\">\n                    <Regras />\n                </Grid>\n                <Grid item lg={4} minWidth={'600px'} className=\"ShareLayoutGrid\">\n                    <Outlet />\n                </Grid>\n                <Grid item lg={3} className=\"ShareLayoutGrid\">\n                    <MoneyRanking />\n                    <Monetizacao />\n                    <Box sx={{height: '60px'}}/>\n                </Grid>\n            </Grid>\n\n            {/* Conteudo tela Grande */}\n            <Grid container \n                sx={{\n                    justifyContent: 'center', alignContent: 'center', verticalAlign: 'center',\n                    display: {xs: 'none', md: 'none', lg: 'flex', xl: 'none'}, width: '100%'\n                }}\n            >\n                <Grid item lg={2.5} className=\"ShareLayoutGrid\">\n                    <Regras />\n                </Grid>\n                <Grid item lg={3.5} minWidth={'600px'} className=\"ShareLayoutGrid\">\n                    <Outlet />\n                </Grid>\n                <Grid item lg={2.5} className=\"ShareLayoutGrid\">\n                    <MoneyRanking />\n                    <Monetizacao />\n                    <Box sx={{height: '60px'}}/>\n                </Grid>\n            </Grid>\n\n            {/* Conteudo tela Média */}\n            <Grid container columnSpacing={{sm: 2}}\n                sx={{\n                    justifyContent: 'center', alignContent: 'center', verticalAlign: 'center', my: 'auto',\n                    display: {xs: 'none', md: 'flex', lg: 'none'}, width: '100%'\n                }}\n            >\n                <Grid item md={12} minWidth={'600px'} className=\"ShareLayoutGrid\">\n                    <Outlet />\n                </Grid>\n                <Grid item md={5} className=\"ShareLayoutGrid\">\n                    <MoneyRanking />\n                    <Monetizacao />\n                    <Box sx={{height: '80px'}}/>\n                </Grid>\n            </Grid>\n\n            {/* Conteudo tela pequena */}\n            <Grid container columnSpacing={{sm: 2}}\n                sx={{\n                    justifyContent: 'center', alignContent: 'center', verticalAlign: 'center', my: 'auto',\n                    display: {xs: 'flex', md: 'none', lg: 'none'}\n                }}\n            >\n                <Grid item xs={4} minWidth={'600px'} className=\"ShareLayoutGrid\">\n                    <Outlet />\n                </Grid>\n            </Grid>\n\n            {/* Footer */}\n            {/* <Box height={'50px'}>\n\n            </Box> */}\n            <div className=\"fixed-bottom mt-0\">\n                <SharedLayoutFooter />\n            </div>\n        </Grid>\n    );\n};"],"names":["retornaImagemFicha","nome","rey","jedi","jangofett","luke","ahsoka","grogu","galacticempirelogo","rebellogo","darthvader","chewbaca","virgem","leao","cancer","gemeos","aries","touro","aquario","peixes","capricornio","sagitario","escorpiao","libra","natalatt","verao","pascoa","halloween","lufalufa","corvinal","sonserina","grifinoria","saopaulo","santos","corinthians","palmeiras","worf","troi","crusher","data","laforge","picard","riker","trek1","trek2","trek3","dragonballz","esferadodragao","radardodragao","uniformedesongoku","uzumaki","sharigansasuke","uchiha","sharigankakashi","angemon","tailmon","digivice","agumon","vaporeon","pokebola","pikachu","charizard","homemdeferro","homemaranha","capitaoamericaatt","marvelatt","batman","superman","flash","dccomicsatt","ModalFichasClassicas","_ref","setMostrar","setTemaState","disableButton","vsChosenTheme","_jsxs","children","_jsx","Typography","sx","borderRadius","color","mt","backgroundColor","Grid","container","justifyContent","spacing","map","tema","index","item","xs","Box","mb","Tooltip","followCursor","arrow","title","concat","charAt","toUpperCase","slice","placement","Button","disabled","onClick","Avatar","alt","border","BACKGROUND_STYLE","position","top","bottom","left","right","zIndex","MODAL_STYLE","transform","width","height","TITLE_STYLE","textAlign","marginTop","GIF_STYLE","paddingTop","ModalSelecaoDeTema","mostrar","setChosenState","setCategoriaTemaState","_useContext","useContext","AuthContext","ConsultaUsuarioTemas","usuarioTemas","setOpenNotificacao","multiplayerEstabelecido","MultiplayerContext","useEffect","msg","open","severity","Modal","style","fontSize","fontWeight","letterSpacing","className","List","maxWidth","overflow","maxHeight","padding","pb","px","mx","boxShadow","loading","i","j","Skeleton","variant","categoria","temas","toLowerCase","geraPathTema","src","titulo","_tema$imagem","imagem","normalize","replace","split","join","startsWith","SharedLayoutFooter","stopWatch","myTurn","myChosenTheme","vencedorState","empateState","loserState","_Fragment","bgcolor","alignItems","alignContent","TimerIcon","display","md","lg","Paper","lineHeight","SharedLayoutHeader","RealizaLogout","trigger","useScrollTrigger","_useState","useState","_useState2","_slicedToArray","anchorElNav","setAnchorElNav","_useState3","_useState4","anchorElUser","setAnchorElUser","handleCloseUserMenu","navigate","useNavigate","navegarPagina","page","window","location","reload","paginas","Slide","appear","direction","in","AppBar","Container","Toolbar","disableGutters","flexGrow","Icon","mr","backgroundImage","icon","backgroundSize","backgroundRepeat","noWrap","component","href","fontFamily","textDecoration","my","IconButton","size","event","currentTarget","MenuIcon","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","MenuItem","console","log","ExtensionIcon","p","profileImg","setting","imagemPadrao","Regras","ComecarStopWatch","propagandaData","cronometro","propagandas","setPropagandas","setIndex","props","useSpring","opacity","from","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","existingPropagandas","_toConsumableArray","imagem_Anun","require","t0","error","finish","stop","apply","arguments","interval","setInterval","prevIndex","length","clearInterval","Card","CardContent","msTransform","m","animated","div","_objectSpread","ModalCompraFicha","_tema$valor","AlteraCarteira","carteira","CompraFicha","LineWeight","wordBreak","descricao","MonetizationOnIcon","ml","valor","toString","Number","id_Mon","Monetizacao","todosTemas","BuscaTemas","setOpen","itemFicha","setitemFicha","_useState5","_useState6","temaFicha","settemaFicha","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","pl","ModalCarteira","ConsultaCarteira","obterCotacaoDoBancoDeDados","moedas","setMoedas","real","setReal","cotacao","setCotacao","fetchCotacao","_ref2","cotacaoDoBanco","toFixed","Stack","TextField","label","type","InputLabelProps","shrink","onChange","e","preventDefault","varMoedas","target","value","soma","parseInt","MoneyRanking","_objectDestructuringEmpty","openFicha","setOpenFicha","pt","columnSpacing","AddIcon","Alert","React","ref","MuiAlert","elevation","SharedLayout","_React$useContext","openNotificacao","Snackbar","autoHideDuration","sm","verticalAlign","xl","minWidth","Outlet"],"sourceRoot":""}