{"version":3,"file":"static/js/382.64167412.chunk.js","mappings":"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","sources":["pages/Game/components/ImportFichas.jsx","pages/Game/components/ModalFichasClassicas.jsx","pages/Game/components/ModalSelecaoDeTema.jsx","pages/Game/components/ImportGifs.jsx","pages/Game/components/ImportAudios.jsx","pages/Game/components/ModalResultado.jsx","pages/Game/components/Tabuleiro.jsx","pages/Game/index.jsx","../node_modules/@mui/icons-material/KeyboardDoubleArrowDown.js"],"sourcesContent":["import rey from './../../../static/images/fichas/star-wars/rey.png';\nimport jedi from './../../../static/images/fichas/star-wars/jedi.png';\nimport jangofett from './../../../static/images/fichas/star-wars/jangofett.png';\nimport luke from './../../../static/images/fichas/star-wars/luke.png';\nimport ahsoka from './../../../static/images/fichas/star-wars/ahsoka.png';\nimport grogu from './../../../static/images/fichas/star-wars/grogu.png';\nimport galacticempirelogo from './../../../static/images/fichas/star-wars/galacticempireLogo.png';\nimport rebellogo from './../../../static/images/fichas/star-wars/rebelLogo.png';\nimport darthvader from './../../../static/images/fichas/star-wars/darthvader.png';\nimport chewbaca from './../../../static/images/fichas/star-wars/chewbaca.png';\nimport virgem from './../../../static/images/fichas/signos/virgem.png';\nimport leao from './../../../static/images/fichas/signos/leao.png';\nimport cancer from './../../../static/images/fichas/signos/cancer.png';\nimport gemeos from './../../../static/images/fichas/signos/gemeos.png';\nimport aries from './../../../static/images/fichas/signos/aries.png';\nimport touro from './../../../static/images/fichas/signos/touro.png';\nimport aquario from './../../../static/images/fichas/signos/aquario.png';\nimport peixes from './../../../static/images/fichas/signos/peixes.png';\nimport capricornio from './../../../static/images/fichas/signos/capricornio.png';\nimport sagitario from './../../../static/images/fichas/signos/sagitario.png';\nimport escorpiao from './../../../static/images/fichas/signos/escorpiao.png';\nimport libra from './../../../static/images/fichas/signos/libra.png';\nimport natalatt from './../../../static/images/fichas/diversos/natal-att.png';\nimport verao from './../../../static/images/fichas/diversos/verao.png';\nimport pascoa from './../../../static/images/fichas/diversos/pascoa.png';\nimport halloween from './../../../static/images/fichas/diversos/halloween.png';\nimport lufalufa from './../../../static/images/fichas/harry-potter/lufa-lufa.png';\nimport corvinal from './../../../static/images/fichas/harry-potter/corvinal.png';\nimport sonserina from './../../../static/images/fichas/harry-potter/sonserina.png';\nimport grifinoria from './../../../static/images/fichas/harry-potter/grifinoria.png';\nimport saopaulo from './../../../static/images/fichas/futebol/sao-paulo.png';\nimport santos from './../../../static/images/fichas/futebol/santos.png';\nimport corinthians from './../../../static/images/fichas/futebol/corinthians.png';\nimport palmeiras from './../../../static/images/fichas/futebol/palmeiras.png';\nimport worf from './../../../static/images/fichas/star-trek/worf.png';\nimport troi from './../../../static/images/fichas/star-trek/troi.png';\nimport crusher from './../../../static/images/fichas/star-trek/crusher.png';\nimport data from './../../../static/images/fichas/star-trek/data.png';\nimport laforge from './../../../static/images/fichas/star-trek/laforge.png';\nimport picard from './../../../static/images/fichas/star-trek/picard.png';\nimport riker from './../../../static/images/fichas/star-trek/riker.png';\nimport trek1 from './../../../static/images/fichas/star-trek/trek1.png';\nimport trek2 from './../../../static/images/fichas/star-trek/trek2.png';\nimport trek3 from './../../../static/images/fichas/star-trek/trek3.png';\nimport dragonballz from './../../../static/images/fichas/dragon-ball/dragon-ball-z.png';\nimport esferadodragao from './../../../static/images/fichas/dragon-ball/esfera-do-dragao.png';\nimport radardodragao from './../../../static/images/fichas/dragon-ball/radar-do-dragao.png';\nimport uniformedesongoku from './../../../static/images/fichas/dragon-ball/uniforme-de-son-goku.png';\nimport uzumaki from './../../../static/images/fichas/naruto/uzumaki.png';\nimport sharigansasuke from './../../../static/images/fichas/naruto/sharingan-sasuke.png';\nimport uchiha from './../../../static/images/fichas/naruto/uchiha.png';\nimport sharigankakashi from './../../../static/images/fichas/naruto/sharingan-kakash.png';\nimport angemon from './../../../static/images/fichas/digimon/angemon.png';\nimport tailmon from './../../../static/images/fichas/digimon/tailmon.png';\nimport digivice from './../../../static/images/fichas/digimon/digivice.png';\nimport agumon from './../../../static/images/fichas/digimon/agumon.png';\nimport vaporeon from './../../../static/images/fichas/pokemon/vaporeon.png';\nimport pokebola from './../../../static/images/fichas/pokemon/pokebola.png';\nimport pikachu from './../../../static/images/fichas/pokemon/pikachu.png';\nimport charizard from './../../../static/images/fichas/pokemon/charizard.png';\nimport homemdeferro from './../../../static/images/fichas/marvel/homem-de-ferro.png';\nimport homemaranha from './../../../static/images/fichas/marvel/homem-aranha.png';\nimport capitaoamericaatt from './../../../static/images/fichas/marvel/capitao-america-att.png';\nimport marvelatt from './../../../static/images/fichas/marvel/marvel-att.png';\nimport batman from './../../../static/images/fichas/dc/batman.png';\nimport superman from './../../../static/images/fichas/dc/superman.png';\nimport flash from './../../../static/images/fichas/dc/flash.png';\nimport dccomicsatt from './../../../static/images/fichas/dc/dc-comics-att.png';\n\nexport const retornaImagemFicha= (nome) => {\n\n    switch (nome) {\n        case 'rey':\n            return rey;\n        case 'jedi':\n            return jedi;\n        case 'jangofett':\n            return jangofett;\n        case 'luke':\n            return luke; \n        case 'ahsoka':\n            return  ahsoka;\n        case 'grogu':\n            return  grogu;\n        case 'galacticempirelogo':\n            return  galacticempirelogo;\n        case 'rebellogo':\n            return  rebellogo;\n        case 'darthvader':\n            return  darthvader;\n        case 'chewbaca':\n            return  chewbaca;\n        case 'virgem':\n            return  virgem;\n        case 'leao':\n            return leao; \n        case 'cancer':\n            return  cancer;\n        case 'gemeos':\n            return  gemeos;\n        case 'aries':\n            return  aries;\n        case 'touro':\n            return  touro;\n        case 'aquario':\n            return  aquario;\n        case 'peixes':\n            return  peixes;\n        case 'capricornio':\n            return  capricornio;\n        case 'sagitario':\n            return  sagitario;\n        case 'escorpiao':\n            return  escorpiao;\n        case 'libra':\n            return  libra;\n        case 'natalatt':\n            return  natalatt;\n        case 'verao':\n            return  verao;\n        case 'pascoa':\n            return  pascoa;\n        case 'halloween':\n            return  halloween;\n        case 'lufalufa':\n            return  lufalufa;\n        case 'corvinal':\n            return  corvinal;\n        case 'sonserina':\n            return  sonserina;\n        case 'grifinoria':\n            return  grifinoria;\n        case 'saopaulo':\n            return  saopaulo;\n        case 'santos':\n            return  santos;\n        case 'corinthians':\n            return  corinthians;\n        case 'palmeiras':\n            return  palmeiras;\n        case 'worf':\n            return worf; \n        case 'troi':\n            return troi; \n        case 'crusher':\n            return  crusher;\n        case 'data':\n            return data; \n        case 'laforge':\n            return  laforge;\n        case 'picard':\n            return  picard;\n        case 'riker':\n            return  riker;\n        case 'trek1':\n            return  trek1;\n        case 'trek2':\n            return  trek2;\n        case 'trek3':\n            return  trek3;\n        case 'dragonballz':\n            return  dragonballz;\n        case 'esferadodragao':\n            return  esferadodragao;\n        case 'radardodragao':\n            return  radardodragao;\n        case 'uniformedesongoku':\n            return  uniformedesongoku;\n        case 'uzumaki':\n            return  uzumaki;\n        case 'sharigansasuke':\n            return  sharigansasuke;\n        case 'uchiha':\n            return  uchiha;\n        case 'sharigankakashi':\n            return  sharigankakashi;\n        case 'angemon':\n            return  angemon;\n        case 'tailmon':\n            return  tailmon;\n        case 'digivice':\n            return  digivice;\n        case 'agumon':\n            return  agumon;\n        case 'vaporeon':\n            return  vaporeon;\n        case 'pokebola':\n            return  pokebola;\n        case 'pikachu':\n            return  pikachu;\n        case 'charizard':\n            return  charizard;\n        case 'homemdeferro':\n            return  homemdeferro;\n        case 'homemaranha':\n            return  homemaranha;\n        case 'capitaoamericaatt':\n            return  capitaoamericaatt;\n        case 'marvelatt':\n            return  marvelatt;\n        case 'batman':\n            return  batman;\n        case 'superman':\n            return  superman;\n        case 'flash':\n            return  flash;\n        case 'dccomicsatt':\n            return  dccomicsatt;\n\n        default:\n            return nome;\n    }\n}","import { Avatar, Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\n\nexport default function ModalFichasClassicas( {setMostrar, setTemaState, disableButton, vsChosenTheme} ) {\n    return (\n        <div key={`modalSelecaoDeTema-Categoria-Classicos`}>\n            <Typography\n                sx={{\n                    borderRadius: 60,\n                    color: 'font.emphasis',\n                    mt: 2,\n                    backgroundColor: 'background.accordionHeader'\n                }}\n            >\n                {'CLÁSSICOS'}\n            </Typography>\n            <Grid container justifyContent={'center'} spacing={1} sx={{mt: 1}}>\n                {['red','yellow'].map((tema, index) => {\n                    return (\n                        <Grid item key={`modalSelecaoDeTema-Tema-${index}`} xs={3}>\n                            <Box sx={{mb: 1}}>\n                                <Tooltip followCursor arrow title={`${tema.charAt(0).toUpperCase() + tema.slice(1)}`} placement=\"top\">\n                                    <Button\n                                        disabled={!disableButton || (vsChosenTheme === tema)}\n                                        sx={{borderRadius: 60}}\n                                        onClick={() => {setMostrar(false); setTemaState(tema)} }\n                                    >\n                                        <Avatar alt=\"tema.titulo\"\n                                            sx={{border: '1px solid white',\n                                            backgroundColor: tema,\n                                            color: tema\n                                            }}\n                                        />\n                                    </Button>\n                                </Tooltip>\n                                <Typography>\n                                    {tema}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </div>\n    )\n}","import { Avatar, Box, Button, Grid, List, Modal, Skeleton, Tooltip, Typography } from '@mui/material'\nimport React, { useContext, useEffect } from 'react';\nimport ModalFichasClassicas from './ModalFichasClassicas';\nimport AuthContext from '../../../context/AuthContext';\nimport { retornaImagemFicha } from './ImportFichas';\nimport MultiplayerContext from '../../../context/MultiplayerContext';\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1000'\n}\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n}\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)'\n}\n\nconst GIF_STYLE = {\n  textAlign: 'center',\n  paddingTop: '10px'\n}\n\nexport function ModalSelecaoDeTema({ mostrar, setMostrar, setChosenState, setTemaState, vsChosenTheme, setCategoriaTemaState}) {\n    let basePathImages = './../../../static/images/fichas/';\n\n    const {\n        ConsultaUsuarioTemas, \n        usuarioTemas,\n        setOpenNotificacao\n    } = useContext(AuthContext);\n\n    const {\n        multiplayerEstabelecido\n    } = useContext(MultiplayerContext);\n\n    useEffect(() => {\n        ConsultaUsuarioTemas();\n    }, [])\n\n    useEffect(() => {\n        if (mostrar && !multiplayerEstabelecido) {\n            setOpenNotificacao({\n                msg: 'Esperando jogador entrar na sala...',\n                open: true,\n                severity: 'warning'\n            });\n        };\n    }, [mostrar]);\n\n    useEffect(() => {\n        if (multiplayerEstabelecido) {\n            setOpenNotificacao({\n                msg: 'Escolha sua ficha e jogue!',\n                open: true,\n                severity: 'success'\n            });\n        };\n    }, [multiplayerEstabelecido]);\n\n    return (\n      <Modal open={mostrar} style={BACKGROUND_STYLE}>\n        <div style={MODAL_STYLE}>\n          <div style={TITLE_STYLE}>\n            <Typography sx={{\n                color: 'font.emphasis',\n                fontSize: 23,\n                fontWeight: 550,\n                letterSpacing: 2\n            }}>\n                {'SELECIONE SEU TEMA'}\n            </Typography>\n            {/* <p>{!isVencedor ?? 'Revanche?'}</p> */}\n          </div>\n          <div style={GIF_STYLE} className='mt-4'>\n                <List\n                    sx={{\n                        borderRadius: 7,\n                        width: '100%',\n                        maxWidth: 480,\n                        position: 'relative',\n                        overflow: 'auto',\n                        maxHeight: 350,\n                        padding: 0,\n                        '& ul': { padding: 0 },\n                        mt: 0,\n                        backgroundColor: 'background.card',\n                        pb: 2,\n                        px: 2,\n                        mx: 'auto',\n                        boxShadow: 'rgba(255, 255, 255, 0.25) 0px 0px 0.25em, rgba(90, 125, 188, 0.05) 0px 0.25em 1em;'\n                    }}\n                >\n                    <ModalFichasClassicas setMostrar={setMostrar} setTemaState={setTemaState} disableButton={multiplayerEstabelecido} vsChosenTheme={vsChosenTheme} />\n                    { !usuarioTemas.loading ?\n                        usuarioTemas.data.map((item, index) => {\n                            return (\n                                <div key={`modalSelecaoDeTema-Categoria-${index}`}>\n                                    <Typography\n                                        sx={{\n                                            borderRadius: 60,\n                                            color: 'font.emphasis',\n                                            mt: 2,\n                                            backgroundColor: 'background.accordionHeader'\n                                        }}\n                                    >\n                                        {item.categoria}\n                                    </Typography>\n                                    <Grid container spacing={1} sx={{mt: 1}}>\n                                        {item.temas.map((tema, index) => {\n                                            return (\n                                                <Grid item key={`modalSelecaoDeTema-Tema-${index}`} xs={3}>\n                                                    <Box sx={{mb: 1}}>\n                                                        <Tooltip followCursor arrow title={`${tema.nome.charAt(0).toUpperCase() + tema.nome.slice(1)}`} placement=\"top\">\n                                                            <Button \n                                                                    disabled={!multiplayerEstabelecido || (vsChosenTheme === tema.nome.toLowerCase()) || vsChosenTheme === retornaImagemFicha(geraPathTema(tema))}\n                                                                    sx={{borderRadius: 60}}\n                                                                    onClick={() => {setMostrar(false); setTemaState(retornaImagemFicha(geraPathTema(tema))); setCategoriaTemaState(item.categoria);} }\n                                                                >\n                                                                    <Avatar alt=\"\" src={retornaImagemFicha(geraPathTema(tema)) === \"\" ? geraPathTema(tema) : retornaImagemFicha(geraPathTema(tema))}\n                                                                        sx={{border: '1px solid white',\n                                                                        color: 'font.main',\n                                                                        }}\n                                                                    />\n                                                                </Button>\n                                                                <Typography>\n                                                                    {tema.titulo}\n                                                                </Typography>\n                                                        </Tooltip>\n                                                    </Box>\n                                                </Grid>\n                                            );\n                                        })}\n                                    </Grid>\n                                </div>\n                            )\n                        })\n                        :\n                        <div key={`modalSelecaoDeTema-Carregando-Categoria`}>\n                            <Typography\n                                sx={{\n                                    borderRadius: 60,\n                                    color: 'font.emphasis',\n                                    mt: 2,\n                                    backgroundColor: 'background.accordionHeader'\n                                }}\n                            >\n                                {'Carregando...'}\n                            </Typography>\n                            <Grid container spacing={1} sx={{mt: 1, height: '150px'}}>\n                            {\n                                [0,1,2,3].map((i, j) => {return (\n                                    <Grid item key={`modalSelecaoDeTema-Carregando-Tema-${j}`} xs={3}>\n                                        <Box sx={{mb: 1}}>\n                                            <Skeleton variant=\"circular\" width={47} height={47} sx={{mx: 'auto'}} />\n                                        </Box>\n                                    </Grid>\n                                )})\n                            }\n                            </Grid>\n                        </div>\n                }\n                </List>\n          </div>\n        </div>\n      </Modal>\n    );\n};\n\nexport const geraPathTema = (tema) => {\n    let nome = tema.imagem?.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").split(' ').join('').split('-').join('').replace('.png', '');\n\n    if (tema.imagem && tema.imagem.startsWith('https')) {\n        return tema.imagem;\n    } else {\n        return nome;\n    }    \n};","import batman from './../../../static/images/gifs/dc/batman.gif';\nimport superman from './../../../static/images/gifs/dc/superman.gif';\nimport flash from './../../../static/images/gifs/dc/flash.gif';\nimport dc from './../../../static/images/gifs/dc/dc.gif';\nimport digimon from './../../../static/images/gifs/digimon/digimon.gif';\nimport halloween from './../../../static/images/gifs/diversos/halloween.gif';\nimport natalatt from './../../../static/images/gifs/diversos/natalatt.gif';\nimport pascoa from './../../../static/images/gifs/diversos/pascoa.gif';\nimport verao from './../../../static/images/gifs/diversos/verao.gif';\nimport dragonball from './../../../static/images/gifs/dragon-ball/dragon-ball.gif';\nimport futebol from './../../../static/images/gifs/futebol/futebol.gif';\nimport lufalufa from './../../../static/images/gifs/harrypotter/lufa.gif';\nimport corvinal from './../../../static/images/gifs/harrypotter/corvinal.gif';\nimport sonserina from './../../../static/images/gifs/harrypotter/sonserina.gif';\nimport grifinoria from './../../../static/images/gifs/harrypotter/grifinoria.gif';\nimport homemdeferro from './../../../static/images/gifs/marvel/homemdeferro.gif';\nimport homemaranha from './../../../static/images/gifs/marvel/homemaranha.gif';\nimport capitaoamericaatt from './../../../static/images/gifs/marvel/capitaoamericaatt.gif';\nimport marvel from './../../../static/images/gifs/marvel/marvel.gif';\nimport naruto from './../../../static/images/gifs/naruto/naruto.gif';\nimport vaporeon from './../../../static/images/gifs/pokemon/vaporeon.gif';\nimport pokemon from './../../../static/images/gifs/pokemon/pokemon.gif';\nimport pikachu from './../../../static/images/gifs/pokemon/pikachu.gif';\nimport charizard from './../../../static/images/gifs/pokemon/charizard.gif';\nimport startrek from './../../../static/images/gifs/star-trek/star-trek.gif';\nimport rey from './../../../static/images/gifs/star-wars/rey.gif';\nimport jangofett from './../../../static/images/gifs/star-wars/jangofett.gif';\nimport luke from './../../../static/images/gifs/star-wars/luke.gif';\nimport grogu from './../../../static/images/gifs/star-wars/grogu.gif';\nimport darthvader from './../../../static/images/gifs/star-wars/darthvader.gif';\nimport chewbaca from './../../../static/images/gifs/star-wars/chewbaca.gif';\nimport starwars from './../../../static/images/gifs/star-wars/star-wars.gif';\nimport padrao from './../../../static/images/gifs/padrao.gif';\n\nexport const retornaGif= (nome) => {\n    if (nome.includes('batman')) {\n        return batman;\n    } else if (nome.includes('superman')) {\n        return superman;\n    } else if (nome.includes('flash')) {\n        return flash;\n    } else if (nome.includes('dc')) {\n        return dc;\n    } else if (nome.includes('digimon')) {\n        return digimon;\n    } else if (nome.includes('natalatt')) {\n        return natalatt;\n    } else if (nome.includes('verao')) {\n        return verao;\n    } else if (nome.includes('pascoa')) {\n        return pascoa;\n    } else if (nome.includes('halloween')) {\n        return halloween;\n    } else if (nome.includes('dragon-ball-z')) {\n        return dragonball;\n    } else if (nome.includes('futebol')) {\n        return futebol;\n    } else if (nome.includes('lufalufa')) {\n        return lufalufa;\n    } else if (nome.includes('corvinal')) {\n        return corvinal;\n    } else if (nome.includes('sonserina')) {\n        return sonserina;\n    } else if (nome.includes('grifinoria')) {\n        return grifinoria;\n    } else if (nome.includes('homemdeferro')) {\n        return homemdeferro;\n    } else if (nome.includes('homemaranha')) {\n        return homemaranha;\n    } else if (nome.includes('capitaoamericaatt')) {\n        return capitaoamericaatt;\n    } else if (nome.includes('marvel')) {\n        return marvel;\n    } else if (nome.includes('naruto')) {\n        return naruto;\n    } else if (nome.includes('vaporeon')) {\n        return vaporeon;\n    } else if (nome.includes('pokemon')) {\n        return pokemon;\n    } else if (nome.includes('pikachu')) {\n        return pikachu;\n    } else if (nome.includes('charizard')) {\n        return charizard;\n    } else if (nome.includes('star-trek')) {\n        return startrek;\n    } else if (nome.includes('rey')) {\n        return rey;\n    } else if (nome.includes('jangofett')) {\n        return jangofett;\n    } else if (nome.includes('luke')) {\n        return luke;\n    } else if (nome.includes('grogu')) {\n        return grogu;\n    } else if (nome.includes('darthvader')) {\n        return darthvader;\n    } else if (nome.includes('chewbaca')) {\n        return chewbaca;\n    } else if (nome.includes('star-wars')) {\n        return starwars;\n    } else if (nome.includes('padrao')){\n        return padrao;\n    }\n    else{\n        return \"\";\n    }\n}","import derrota from './../../../static/audios/derrota.mp3';\nimport ficha from './../../../static/audios/ficha.mp3';\nimport empate from './../../../static/audios/empate.mp3';\nimport vitoria from './../../../static/audios/vitoria.mp3';\nimport musica from './../../../static/audios/musica.mp3';\n\nexport const retornaAudio= (nome) => {\n    switch (nome) {\n        case 'ficha':\n            return  ficha;\n        case 'vitoria':\n            return  vitoria;\n        case 'empate':\n            return  empate;    \n        case 'derrota':\n            return  derrota; \n        case 'musica':\n            return musica; \n            \n        default:\n            break;\n    }\n}","import { Box, Grid, Modal, Typography, Button } from '@mui/material'\nimport { retornaGif } from \"./ImportGifs\";\nimport React, { useState } from 'react';\nimport { retornaAudio } from \"./ImportAudios\";\nimport { geraPathTema } from \"./ModalSelecaoDeTema\";\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1000'\n}\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n}\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)',\n  fontFamily: 'Roboto',\n  fontSize: '55px',\n  fontWeight: 700,\n  lineHeight: '55px',\n  letterSpacing: '0em',\n  textAlign: 'center'\n}\n\nconst GIF_DIV_STYLE = {\n  textAlign: 'center',\n  paddingTop: '10px'\n}\n\nconst GIF_STYLE = {\n  maxWidth: '250px'\n}\n\nexport function ModalResultado({ mostrar, setMostrar, isVencedor, isEmpate, temaUser, categoriaTemaUser }) {\n  const [audioPlayed, setAudioPlayed] = useState(false);\n\n if (mostrar && !audioPlayed)\n    playAudio(isVencedor, isEmpate);\n\n  const resolveClick = () => {\n    window.location.reload()\n  };\n\n  // GIFS\n  let srcGif = \"\";\n  if (retornaGif(temaUser) != null && retornaGif(temaUser) != '')\n    srcGif = retornaGif(temaUser);\n  else if ((retornaGif(categoriaTemaUser) != null && retornaGif(categoriaTemaUser) != ''))\n    srcGif = retornaGif(categoriaTemaUser);\n  else\n  srcGif = retornaGif(\"padrao\");\n\n    return (\n      <Modal onClose={() => setMostrar(false) } open={mostrar} style={BACKGROUND_STYLE}>\n        <div style={MODAL_STYLE}>\n          <div style={TITLE_STYLE}>\n            <p>{isVencedor ? 'Você Venceu!' : isEmpate ? \"Empate!\" : 'Game Over!'}</p>\n            <div style={{marginTop: '30px', fontSize: '40px'}}>{!isVencedor && 'Revanche?'}</div>\n          </div>\n          <div style={GIF_DIV_STYLE}>\n            <img style={GIF_STYLE} src={isVencedor ? srcGif : \"\"} />\n          </div>\n          {/* Button */}\n          <Grid container justifyContent={'center'}>\n                <Grid item xs={4.3}>\n                    <Button\n                        onClick={resolveClick}\n                        variant='contained' \n                        sx={{\n                            mx: 'auto', \n                            mt: isVencedor ? 5 : 24, \n                            color: 'font.emphasis'\n                        }}\n                    >\n                        JOGAR NOVAMENTE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n      </Modal>\n    );\n\n    function playAudio(vencedor, empate) {\n      console.log(\"VAI TOCAR AUDIO MODAL!\");\n      var audioFicha = new Audio();\n\n      if (vencedor)\n        audioFicha.src = retornaAudio('vitoria');\n      else if (empate)\n        audioFicha.src = retornaAudio('empate');\n      else \n        audioFicha.src = retornaAudio('derrota');\n\n      audioFicha.play();\n      setAudioPlayed(true);\n    }\n};","import { Avatar, Button, Card, Container, Grid, Input } from \"@mui/material\";\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport { useContext, useEffect, useRef, useState } from \"react\";\n/** Socket */\nimport { ModalResultado } from \"./ModalResultado\";\nimport MultiplayerContext from \"../../../context/MultiplayerContext\";\nimport AuthContext from \"../../../context/AuthContext\";\nimport { ModalSelecaoDeTema, geraPathTema } from \"./ModalSelecaoDeTema\";\nimport { retornaImagemFicha } from \"./ImportFichas\";\nimport { retornaAudio } from \"./ImportAudios\";\n\nexport default function Tabuleiro(  ) {\n    const {\n        gameState, setGameState,\n        colunaState, setColunaState,\n        temaState, setTemaState,\n        vencedorState, setVencedorState,\n        empateState, setEmpateState,\n        loserState, setLoserState,\n        mostrarModalState, setMostrarModalState,\n        mostrarModalTemaState, setMostrarModalTemaState,\n        disabledButton,\n        socket, setSocket,\n        stopWatch, setStopWatch,\n        statusJogo, setStatusJogo,\n        myTurn, setTurn,\n        myChosenTheme, setChosenTheme,\n        // aindaEhPossivelVencer,\n        verificarEmpate,\n        verificarVitoria,\n        posicionaFichaAoFinalDaColuna,\n        encerrarJogo,\n        setMultiplayerEstabelecido, multiplayerEstabelecido,\n        vsChosenTheme, setVsChosenTheme,\n        categoriaTemaState, setCategoriaTemaState\n    } = useContext(MultiplayerContext);\n\n    const {userId} = useContext(AuthContext);\n\n    const [delay, setDelay] = useState(1000);\n    const [isRunning, setIsRunning] = useState(false);\n\n    const [highlightedColumn, setHighlightedColumn] = useState(null);\n    const [tempGameState, setTempGameState] = useState([]);\n    const [isAnimating, setIsAnimating] = useState(false);\n\n    const handleMouseEnter = (columnIndex) => {\n    setHighlightedColumn(columnIndex);\n    };\n\n    const handleMouseLeave = () => {\n    setHighlightedColumn(null);\n    };\n\n    const delayAnima = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n    const animationDelay = 150; // tempo da animação em milissegundos\n\n    useEffect(() => {\n        // Tocar música quando o tema é escolhido\n        if (myChosenTheme && myChosenTheme !== 'grey' && myChosenTheme !== '' ) {\n            playMusic();\n        } else {\n            return () => {\n                stopMusic();\n            };\n        }\n    }, [myChosenTheme]);\n\n    useEffect(() => {\n        // Parar música quando o jogo termina\n        if (statusJogo === 'winner' || statusJogo === 'empate' || statusJogo === 'loser') {\n            stopMusic();\n        }\n    }, [statusJogo]);\n\n    const animateCellColors = async (cellIndex) => {\n        if (!isAnimating && cellIndex < gameState.length) {\n            setIsAnimating(true);\n            const currentCell = gameState[cellIndex];\n            if (currentCell && Array.isArray(currentCell.casas)) {\n                const cellContent = currentCell.casas[colunaState];\n                if (cellContent === 0) {\n                    const animationTheme = myChosenTheme;\n                    // Cria uma cópia do estado do jogo\n                    const tempGameState = gameState.map(row => ({ ...row, casas: [...row.casas] }));\n                    // Atualiza o estado temporário para refletir a animação\n                    tempGameState[cellIndex].casas[colunaState] = animationTheme;\n                    setGameState(tempGameState);\n                    // Aguarda o tempo de animação\n                    await delayAnima(animationDelay);\n                    // Volta para a cor original\n                    tempGameState[cellIndex].casas[colunaState] = casaBackgroundVazia;\n                    setGameState(tempGameState);\n                    // Verifica se é a última célula\n                    if (cellIndex === gameState.length - 1) {\n                        // Aguarda antes de encerrar a animação\n                        await delayAnima(animationDelay);\n                        // Atualiza a célula inicial para casaBackgroundVazia\n                        setGameState(tempGameState);\n                    } else {\n                        // Chama a próxima animação\n                        await animateCellColors(cellIndex + 1);\n                    }\n                } else {\n                    // Se a célula não estiver vazia, pula para a próxima sem animação\n                    await animateCellColors(cellIndex + 1);\n                }\n            }\n        }\n    \n        setIsAnimating(false);\n    };\n\n    useInterval(() => {\n        if (stopWatch > 0)\n            setStopWatch(stopWatch - 1);\n        else {\n            //setLoserState(true);\n            setTurn(false);\n            conversaComSocket();\n        }\n    }, isRunning ? delay : null);\n\n    useEffect(() => {\n        if (empateState || vencedorState || loserState)\n            setIsRunning(false);\n    }, [ stopWatch ])\n\n    useEffect(() => {\n        if (socket.set)\n        {\n            console.log(socket.id)\n            socket.id.on(\"msg\", (arg) => {\n                console.log('socket message:', arg); // world\n                setSocket((prev) => {return {...prev, msg: arg.tema}})\n                if (!multiplayerEstabelecido) \n                    setMultiplayerEstabelecido(true);\n                if (arg.tema !== 'escolhendo-tema')\n                    setTurn(true);\n                if (arg.tema !== '') {\n                    setVsChosenTheme(arg.tema);\n                    setIsRunning(true);\n                }\n                if (arg.gameStatus === 'loser') {\n                    setVencedorState(true);\n                    setIsRunning(false);\n                }\n                if (arg.tabuleiro !== gameState){\n                    if (arg.gameStatus === 'jogando')\n                        setTurn(true);\n                    setGameState(arg.tabuleiro);\n                    setStatusJogo(arg.gameStatus);\n                };\n                if (arg.gameStatus === 'winner') {\n                    setLoserState(true);\n                }\n            });\n        }\n    }, [])\n    \n    useEffect(() => {\n        if (multiplayerEstabelecido) conversaComSocket();\n    }, [multiplayerEstabelecido])\n\n    useEffect(() => {\n        if (statusJogo != null && statusJogo === 'winner'){\n            conversaComSocket();\n            encerrarJogo();\n        }\n        else if (statusJogo != null && statusJogo === 'empate') {\n            setEmpateState(true);\n            encerrarJogo();\n        }\n    }, [statusJogo])\n\n    useEffect(() => {\n        if (myChosenTheme !== '' || myChosenTheme !== 'grey') conversaComSocket();\n    }, [temaState])\n\n    // Coloca timer de 45s se o Tema estiver como valor 'grey'\n    useEffect(() => {\n        if (temaState === 'grey') {\n            setMostrarModalTemaState(true);\n        };\n    }, [temaState]);\n\n    useEffect(() => {\n        if (myTurn && (myChosenTheme !== 'grey' && myChosenTheme !== '')) {\n            setStopWatch(15);\n            setIsRunning(true);\n        }\n        else setIsRunning(false);\n    }, [myTurn]);\n\n    // Roda quando o evento do botão é gerado\n    useEffect(() => {\n\n        if (gameState.length > 0){\n            animateCellColors(0);\n            // Adiciona um atraso de 1000ms antes de executar a lógica seguinte\n            const delayBeforeNextLogic = setTimeout(() => {\n                // Chama função para alocar ficha ao final da coluna selecionada\n                let novoArray = posicionaFichaAoFinalDaColuna(gameState, colunaState);\n                setTemaState(myChosenTheme);\n                setTurn(false);\n                // Chama função que envia jogada para o outro jogador\n                if (socket.set) {\n                    conversaComSocket();\n                }\n                setColunaState(-1);\n                setGameState(novoArray);\n                // Roda lógica para saber se o jogador ganhou\n                setVencedorState(verificarVitoria(gameState));\n                // Roda lógica para saber o jogo empatou (terminou sem vitória)\n                setEmpateState(verificarEmpate(gameState));\n                //console.log(\"empate \" + empateState);\n            }, 1000);\n    \n            // Limpa o timeout ao desmontar o componente ou quando a dependência colunaState mudar\n            return () => clearTimeout(delayBeforeNextLogic);\n        }\n    }, [colunaState]);\n\n    // Roda quando um vencedor é determinado\n    useEffect(() => {\n        if (vencedorState) {\n            encerrarJogo();\n        };\n    }, [vencedorState]);\n\n    // Roda quando um empate é determinado\n    useEffect(() => {\n        if (empateState)   \n        {\n            encerrarJogo();\n        };\n    }, [empateState]);\n\n    useEffect(() => {\n        if (loserState)   \n        {\n            conversaComSocket();\n            encerrarJogo();\n        };\n    }, [loserState]);\n\n    // Envia mensagem para Socket/Multiplayer\n    const conversaComSocket = () => {\n        console.log('mandando msg!')\n        setSocket((prev) => {return {...prev, it: (socket.it + 1)}});\n        const multiplayerState = {\n            tabuleiro: gameState,\n            tema: myChosenTheme,\n            userId: userId,\n            gameStatus: vencedorState ? 'winner' \n                : empateState ? 'empate' \n                : myChosenTheme==='grey' || myChosenTheme==='' ? 'escolhendo-tema'\n                : loserState ? 'loser'\n                : 'jogando',\n        };\n        socket.id.emit(\"msg\", multiplayerState);\n    };\n\n    useEffect(() => {\n        conversaComSocket();\n    }, [temaState]);\n\n    useEffect(() => {\n        conversaComSocket();\n    }, [myChosenTheme]);\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        console.log(e.target.value)\n        setChosenTheme(e.target.value);\n        setTemaState(e.target.value);\n    };\n\n    return (\n        <Container sx={{mx: 'auto', justifyContent: 'center'}}>  \n            {/* Linha de botões */}\n            <Grid container spacing={2} sx={{mt: 0.2, mb: 1, pl: 0.5, pr: 4}}>\n                {gameState[0].casas.map((botao, i) => {\n                    return (\n                        <Grid item key={`JogarTabuleiroArrayBotao-${i}`} xs={1} sx={{my: 0, mx: 'auto'}}>\n                            <Button \n                                disabled={\n                                    disabledButton ? \n                                        disabledButton : \n                                        myTurn ? \n                                            false : \n                                            true\n                                } \n                                onClick={() => {setColunaState(i); playAudio(); }}\n                                sx={{\n                                    height: '20px',\n                                    mr: 4, mt: 0,\n                                    borderRadius: '30px',\n                                    '&:hover': {\n                                        backgroundColor: 'none',\n                                        opacity: '80%',\n                                    }\n                                }}>\n                                <KeyboardDoubleArrowDownIcon sx={disabledButton ?\n                                    {\n                                        fontSize: \"30px\",\n                                        color: 'font.main',\n                                        '&:hover': {\n                                            color: 'primary.main'\n                                        }\n                                    }\n                                    : \n                                    {\n                                        fontSize: \"30px\",\n                                        color: '#5C92FF',\n                                        '&:hover': {\n                                            color: 'primary.main'\n                                        }\n                                    }\n                                }\n                                onMouseEnter = {() => handleMouseEnter(i)}\n                                onMouseLeave = {handleMouseLeave}\n                                />\n                            </Button>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n\n            {/* Tabuleiro */}\n            <Card sx={{\n                height: '515px', m: 2, \n                backgroundColor: 'background.card',\n                borderRadius: 5,\n                p: 0,\n                minWidth: '530px'\n            }}>\n                {gameState.map((item, i) => {\n                return (\n                    // LINHA DO TABULEIRO\n                    <Grid item key={`JogarTabuleiroArrayItem-${i}`} container spacing={0} sx={{mt: i===0?0:2, marginBottom: i===(gameState.length)?0:2, mx: 'auto'}}>\n                        {item.casas.map((casa, j) => {\n                        return (\n                            <Grid item key={`JogarTabuleiroArrayItem-${i}-Casa-${j}`} xs={1} sx={{my: 2, ml: 0, mx: 'auto'}}>\n                                {/* CASA DO TABULEIRO */}\n                                <Avatar alt=\"\" src={casa === 0 || casa === 'red' || casa === 'yellow' ? '' : casa}\n                                    sx={{\n                                        border: '1px solid white',\n                                        color: 'font.main',\n                                        backgroundColor: casa === 0 ? casaBackgroundVazia : (casa !== 'red' && casa !== 'yellow') ? '' : casa,\n                                        transition:'background-color 0.5s, box-shadow 0.5s',\n                                        boxShadow:\n                                            highlightedColumn !== null && highlightedColumn === j\n                                            ? '0 0 5px 5px white' \n                                            : 'none'\n                                    }}\n                                >\n                                    {''}\n                                </Avatar>\n                            </Grid>\n                        )\n                        })}\n                    </Grid>\n                )\n            })}\n            </Card>\n            <ModalResultado mostrar={mostrarModalState} setMostrar={setMostrarModalState} isVencedor={vencedorState} isEmpate={empateState} temaUser={myChosenTheme} categoriaTemaUser={categoriaTemaState} />\n            <ModalSelecaoDeTema mostrar={mostrarModalTemaState} setMostrar={setMostrarModalTemaState} setChosenState={setChosenTheme} setTemaState={setChosenTheme} vsChosenTheme={vsChosenTheme} setCategoriaTemaState={setCategoriaTemaState} />\n        </Container>\n    );\n};\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n    \n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n    \n    useEffect(() => {\n        function tick() {\n        savedCallback.current();\n        }\n        \n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nfunction playAudio() {\n    var audioFicha = new Audio();\n    audioFicha.src = retornaAudio('ficha');\n\n    audioFicha.play();\n}\n\nvar audioMusic = new Audio();\n\nfunction playMusic() {\n    audioMusic.src = retornaAudio('musica');\n    // Configura o volume (0.0 - 1.0)\n    audioMusic.volume = 0.25; \n    audioMusic.loop = true;\n    audioMusic.play();\n}\n\nfunction stopMusic() {\n    audioMusic.pause();\n    audioMusic.currentTime = 0; // Reinicia a reprodução para o início\n}\n\nconst casaBackgroundVazia = '#6c757d';","import React from \"react\";\nimport Tabuleiro from \"./components/Tabuleiro\";\n\nexport default function Game(  ) {\n\n    return (\n        <Tabuleiro />\n    );\n};","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 6.41 16.59 5 12 9.58 7.41 5 6 6.41l6 6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m18 13-1.41-1.41L12 16.17l-4.59-4.58L6 13l6 6z\"\n}, \"1\")], 'KeyboardDoubleArrowDown');\nexports.default = _default;"],"names":["retornaImagemFicha","nome","rey","jedi","jangofett","luke","ahsoka","grogu","galacticempirelogo","rebellogo","darthvader","chewbaca","virgem","leao","cancer","gemeos","aries","touro","aquario","peixes","capricornio","sagitario","escorpiao","libra","natalatt","verao","pascoa","halloween","lufalufa","corvinal","sonserina","grifinoria","saopaulo","santos","corinthians","palmeiras","worf","troi","crusher","data","laforge","picard","riker","trek1","trek2","trek3","dragonballz","esferadodragao","radardodragao","uniformedesongoku","uzumaki","sharigansasuke","uchiha","sharigankakashi","angemon","tailmon","digivice","agumon","vaporeon","pokebola","pikachu","charizard","homemdeferro","homemaranha","capitaoamericaatt","marvelatt","batman","superman","flash","dccomicsatt","ModalFichasClassicas","_ref","setMostrar","setTemaState","disableButton","vsChosenTheme","_jsxs","children","_jsx","Typography","sx","borderRadius","color","mt","backgroundColor","Grid","container","justifyContent","spacing","map","tema","index","item","xs","Box","mb","Tooltip","followCursor","arrow","title","concat","charAt","toUpperCase","slice","placement","Button","disabled","onClick","Avatar","alt","border","BACKGROUND_STYLE","position","top","bottom","left","right","zIndex","MODAL_STYLE","transform","width","height","TITLE_STYLE","textAlign","marginTop","GIF_STYLE","paddingTop","ModalSelecaoDeTema","mostrar","setChosenState","setCategoriaTemaState","_useContext","useContext","AuthContext","ConsultaUsuarioTemas","usuarioTemas","setOpenNotificacao","multiplayerEstabelecido","MultiplayerContext","useEffect","msg","open","severity","Modal","style","fontSize","fontWeight","letterSpacing","className","List","maxWidth","overflow","maxHeight","padding","pb","px","mx","boxShadow","loading","i","j","Skeleton","variant","categoria","temas","toLowerCase","geraPathTema","src","titulo","_tema$imagem","imagem","normalize","replace","split","join","startsWith","retornaGif","includes","dc","digimon","dragonball","futebol","marvel","naruto","pokemon","startrek","starwars","padrao","retornaAudio","ficha","vitoria","empate","derrota","musica","_defineProperty","fontFamily","lineHeight","GIF_DIV_STYLE","ModalResultado","isVencedor","isEmpate","temaUser","categoriaTemaUser","_useState","useState","_useState2","_slicedToArray","audioPlayed","setAudioPlayed","vencedor","console","log","audioFicha","Audio","play","playAudio","srcGif","onClose","window","location","reload","Tabuleiro","gameState","setGameState","colunaState","setColunaState","temaState","vencedorState","setVencedorState","empateState","setEmpateState","loserState","setLoserState","mostrarModalState","setMostrarModalState","mostrarModalTemaState","setMostrarModalTemaState","disabledButton","socket","setSocket","stopWatch","setStopWatch","statusJogo","setStatusJogo","myTurn","setTurn","myChosenTheme","setChosenTheme","verificarEmpate","verificarVitoria","posicionaFichaAoFinalDaColuna","encerrarJogo","setMultiplayerEstabelecido","setVsChosenTheme","categoriaTemaState","userId","delay","_useState3","_useState4","isRunning","setIsRunning","_useState5","_useState6","highlightedColumn","setHighlightedColumn","_useState7","_useState8","_useState9","_useState10","isAnimating","setIsAnimating","handleMouseLeave","delayAnima","ms","Promise","resolve","setTimeout","stopMusic","audioMusic","volume","loop","animateCellColors","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cellIndex","currentCell","animationTheme","_tempGameState","wrap","_context","prev","next","length","Array","isArray","casas","tempGameState","row","_objectSpread","_toConsumableArray","casaBackgroundVazia","stop","_x","apply","arguments","callback","savedCallback","useRef","current","tick","id","setInterval","clearInterval","useInterval","conversaComSocket","set","on","arg","gameStatus","tabuleiro","delayBeforeNextLogic","novoArray","clearTimeout","it","multiplayerState","emit","Container","pl","pr","botao","my","mr","opacity","KeyboardDoubleArrowDownIcon","onMouseEnter","onMouseLeave","Card","m","p","minWidth","marginBottom","casa","ml","transition","pause","currentTime","Game","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}