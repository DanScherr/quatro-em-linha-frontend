{"version":3,"file":"static/js/932.2bb657be.chunk.js","mappings":"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","sources":["pages/Game/components/ImportFichas.jsx","pages/Game/components/ModalFichasClassicas.jsx","pages/Game/components/ModalSelecaoDeTema.jsx","pages/Game/components/ModalResultado.jsx","pages/Game/components/Tabuleiro.jsx","pages/Game/index.jsx","pages/Home/index.jsx","../node_modules/@mui/icons-material/KeyboardDoubleArrowDown.js","../node_modules/@mui/icons-material/PlayCircle.js"],"sourcesContent":["import rey from './../../../static/images/fichas/star-wars/rey.png';\nimport jedi from './../../../static/images/fichas/star-wars/jedi.png';\nimport jangofett from './../../../static/images/fichas/star-wars/jangofett.png';\nimport luke from './../../../static/images/fichas/star-wars/luke.png';\nimport ahsoka from './../../../static/images/fichas/star-wars/ahsoka.png';\nimport grogu from './../../../static/images/fichas/star-wars/grogu.png';\nimport galacticempirelogo from './../../../static/images/fichas/star-wars/galacticempireLogo.png';\nimport rebellogo from './../../../static/images/fichas/star-wars/rebelLogo.png';\nimport darthvader from './../../../static/images/fichas/star-wars/darthvader.png';\nimport chewbaca from './../../../static/images/fichas/star-wars/chewbaca.png';\nimport virgem from './../../../static/images/fichas/signos/virgem.png';\nimport leao from './../../../static/images/fichas/signos/leao.png';\nimport cancer from './../../../static/images/fichas/signos/cancer.png';\nimport gemeos from './../../../static/images/fichas/signos/gemeos.png';\nimport aries from './../../../static/images/fichas/signos/aries.png';\nimport touro from './../../../static/images/fichas/signos/touro.png';\nimport aquario from './../../../static/images/fichas/signos/aquario.png';\nimport peixes from './../../../static/images/fichas/signos/peixes.png';\nimport capricornio from './../../../static/images/fichas/signos/capricornio.png';\nimport sagitario from './../../../static/images/fichas/signos/sagitario.png';\nimport escorpiao from './../../../static/images/fichas/signos/escorpiao.png';\nimport libra from './../../../static/images/fichas/signos/libra.png';\nimport natalatt from './../../../static/images/fichas/diversos/natal-att.png';\nimport verao from './../../../static/images/fichas/diversos/verao.png';\nimport pascoa from './../../../static/images/fichas/diversos/pascoa.png';\nimport halloween from './../../../static/images/fichas/diversos/halloween.png';\nimport lufalufa from './../../../static/images/fichas/harry-potter/lufa-lufa.png';\nimport corvinal from './../../../static/images/fichas/harry-potter/corvinal.png';\nimport sonserina from './../../../static/images/fichas/harry-potter/sonserina.png';\nimport grifinoria from './../../../static/images/fichas/harry-potter/grifinoria.png';\nimport saopaulo from './../../../static/images/fichas/futebol/sao-paulo.png';\nimport santos from './../../../static/images/fichas/futebol/santos.png';\nimport corinthians from './../../../static/images/fichas/futebol/corinthians.png';\nimport palmeiras from './../../../static/images/fichas/futebol/palmeiras.png';\nimport worf from './../../../static/images/fichas/star-trek/worf.png';\nimport troi from './../../../static/images/fichas/star-trek/troi.png';\nimport crusher from './../../../static/images/fichas/star-trek/crusher.png';\nimport data from './../../../static/images/fichas/star-trek/data.png';\nimport laforge from './../../../static/images/fichas/star-trek/laforge.png';\nimport picard from './../../../static/images/fichas/star-trek/picard.png';\nimport riker from './../../../static/images/fichas/star-trek/riker.png';\nimport trek1 from './../../../static/images/fichas/star-trek/trek1.png';\nimport trek2 from './../../../static/images/fichas/star-trek/trek2.png';\nimport trek3 from './../../../static/images/fichas/star-trek/trek3.png';\nimport dragonballz from './../../../static/images/fichas/dragon-ball/dragon-ball-z.png';\nimport esferadodragao from './../../../static/images/fichas/dragon-ball/esfera-do-dragao.png';\nimport radardodragao from './../../../static/images/fichas/dragon-ball/radar-do-dragao.png';\nimport uniformedesongoku from './../../../static/images/fichas/dragon-ball/uniforme-de-son-goku.png';\nimport uzumaki from './../../../static/images/fichas/naruto/uzumaki.png';\nimport sharigansasuke from './../../../static/images/fichas/naruto/sharingan-sasuke.png';\nimport uchiha from './../../../static/images/fichas/naruto/uchiha.png';\nimport sharigankakashi from './../../../static/images/fichas/naruto/sharingan-kakash.png';\nimport angemon from './../../../static/images/fichas/digimon/angemon.png';\nimport tailmon from './../../../static/images/fichas/digimon/tailmon.png';\nimport digivice from './../../../static/images/fichas/digimon/digivice.png';\nimport agumon from './../../../static/images/fichas/digimon/agumon.png';\nimport vaporeon from './../../../static/images/fichas/pokemon/vaporeon.png';\nimport pokebola from './../../../static/images/fichas/pokemon/pokebola.png';\nimport pikachu from './../../../static/images/fichas/pokemon/pikachu.png';\nimport charizard from './../../../static/images/fichas/pokemon/charizard.png';\nimport homemdeferro from './../../../static/images/fichas/marvel/homem-de-ferro.png';\nimport homemaranha from './../../../static/images/fichas/marvel/homem-aranha.png';\nimport capitaoamericaatt from './../../../static/images/fichas/marvel/capitao-america-att.png';\nimport marvelatt from './../../../static/images/fichas/marvel/marvel-att.png';\nimport batman from './../../../static/images/fichas/dc/batman.png';\nimport superman from './../../../static/images/fichas/dc/superman.png';\nimport flash from './../../../static/images/fichas/dc/flash.png';\nimport dccomicsatt from './../../../static/images/fichas/dc/dc-comics-att.png';\n\nexport const retornaImagemFicha= (nome) => {\n    switch (nome) {\n        case 'rey':\n            return rey;\n        case 'jedi':\n            return jedi;\n        case 'jangofett':\n            return jedi\n        case 'luke':\n            return luke; \n        case 'ahsoka':\n            return  ahsoka;\n        case 'grogu':\n            return  grogu;\n        case 'galacticempirelogo':\n            return  galacticempirelogo;\n        case 'rebellogo':\n            return  rebellogo;\n        case 'darthvader':\n            return  darthvader;\n        case 'chewbaca':\n            return  chewbaca;\n        case 'virgem':\n            return  virgem;\n        case 'leao':\n            return leao; \n        case 'cancer':\n            return  cancer;\n        case 'gemeos':\n            return  gemeos;\n        case 'aries':\n            return  aries;\n        case 'touro':\n            return  touro;\n        case 'aquario':\n            return  aquario;\n        case 'peixes':\n            return  peixes;\n        case 'capricornio':\n            return  capricornio;\n        case 'sagitario':\n            return  sagitario;\n        case 'escorpiao':\n            return  escorpiao;\n        case 'libra':\n            return  libra;\n        case 'natalatt':\n            return  natalatt;\n        case 'verao':\n            return  verao;\n        case 'pascoa':\n            return  pascoa;\n        case 'halloween':\n            return  halloween;\n        case 'lufalufa':\n            return  lufalufa;\n        case 'corvinal':\n            return  corvinal;\n        case 'sonserina':\n            return  sonserina;\n        case 'grifinoria':\n            return  grifinoria;\n        case 'saopaulo':\n            return  saopaulo;\n        case 'santos':\n            return  santos;\n        case 'corinthians':\n            return  corinthians;\n        case 'palmeiras':\n            return  palmeiras;\n        case 'worf':\n            return worf; \n        case 'troi':\n            return troi; \n        case 'crusher':\n            return  crusher;\n        case 'data':\n            return data; \n        case 'laforge':\n            return  laforge;\n        case 'picard':\n            return  picard;\n        case 'riker':\n            return  riker;\n        case 'trek1':\n            return  trek1;\n        case 'trek2':\n            return  trek2;\n        case 'trek3':\n            return  trek3;\n        case 'dragonballz':\n            return  dragonballz;\n        case 'esferadodragao':\n            return  esferadodragao;\n        case 'radardodragao':\n            return  radardodragao;\n        case 'uniformedesongoku':\n            return  uniformedesongoku;\n        case 'uzumaki':\n            return  uzumaki;\n        case 'sharigansasuke':\n            return  sharigansasuke;\n        case 'uchiha':\n            return  uchiha;\n        case 'sharigankakashi':\n            return  sharigankakashi;\n        case 'angemon':\n            return  angemon;\n        case 'tailmon':\n            return  tailmon;\n        case 'digivice':\n            return  digivice;\n        case 'agumon':\n            return  agumon;\n        case 'vaporeon':\n            return  vaporeon;\n        case 'pokebola':\n            return  pokebola;\n        case 'pikachu':\n            return  pikachu;\n        case 'charizard':\n            return  charizard;\n        case 'homemdeferro':\n            return  homemdeferro;\n        case 'homemaranha':\n            return  homemaranha;\n        case 'capitaoamericaatt':\n            return  capitaoamericaatt;\n        case 'marvelatt':\n            return  marvelatt;\n        case 'batman':\n            return  batman;\n        case 'superman':\n            return  superman;\n        case 'flash':\n            return  flash;\n        case 'dccomicsatt':\n            return  dccomicsatt;\n\n        default:\n            break;\n    }\n}","import { Avatar, Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\n\nexport default function ModalFichasClassicas( {setMostrar, setTemaState, disableButton, vsChosenTheme} ) {\n    return (\n        <div key={`modalSelecaoDeTema-Categoria-Classicos`}>\n            <Typography\n                sx={{\n                    borderRadius: 60,\n                    color: 'font.emphasis',\n                    mt: 2,\n                    backgroundColor: 'background.accordionHeader'\n                }}\n            >\n                {'CLÁSSICOS'}\n            </Typography>\n            <Grid container justifyContent={'center'} spacing={1} sx={{mt: 1}}>\n                {['red','yellow'].map((tema, index) => {\n                    return (\n                        <Grid item key={`modalSelecaoDeTema-Tema-${index}`} xs={3}>\n                            <Box sx={{mb: 1}}>\n                                <Tooltip followCursor arrow title={`${tema.charAt(0).toUpperCase() + tema.slice(1)}`} placement=\"top\">\n                                    <Button\n                                        disabled={!disableButton || (vsChosenTheme === tema)}\n                                        sx={{borderRadius: 60}}\n                                        onClick={() => {setMostrar(false); setTemaState(tema)} }\n                                    >\n                                        <Avatar alt=\"tema.titulo\"\n                                            sx={{border: '1px solid white',\n                                            backgroundColor: tema,\n                                            color: tema\n                                            }}\n                                        />\n                                    </Button>\n                                </Tooltip>\n                                <Typography>\n                                    {tema}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </div>\n    )\n}","import { Avatar, Box, Button, Grid, List, Modal, Skeleton, Tooltip, Typography } from '@mui/material'\nimport React, { useContext, useEffect } from 'react';\nimport ModalFichasClassicas from './ModalFichasClassicas';\nimport AuthContext from '../../../context/AuthContext';\nimport { retornaImagemFicha } from './ImportFichas';\nimport MultiplayerContext from '../../../context/MultiplayerContext';\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1000'\n}\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n}\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)'\n}\n\nconst GIF_STYLE = {\n  textAlign: 'center',\n  paddingTop: '10px'\n}\n\nexport function ModalSelecaoDeTema({ mostrar, setMostrar, setChosenState, setTemaState, vsChosenTheme }) {\n    console.log(\"Tema do outro user - modal: \" + vsChosenTheme);\n\n    let basePathImages = './../../../static/images/fichas/';\n\n    const {\n        ConsultaUsuarioTemas, \n        usuarioTemas,\n        setOpenNotificacao\n    } = useContext(AuthContext);\n\n    const {\n        multiplayerEstabelecido\n    } = useContext(MultiplayerContext);\n\n    useEffect(() => {\n        ConsultaUsuarioTemas();\n    }, [])\n\n    useEffect(() => {\n        if (mostrar && !multiplayerEstabelecido) {\n            setOpenNotificacao({\n                msg: 'Esperando jogador entrar na sala...',\n                open: true,\n                severity: 'warning'\n            });\n        };\n    }, [mostrar]);\n\n    useEffect(() => {\n        if (multiplayerEstabelecido) {\n            setOpenNotificacao({\n                msg: 'Escolha sua ficha e jogue!',\n                open: true,\n                severity: 'success'\n            });\n        };\n    }, [multiplayerEstabelecido]);\n\n    return (\n      <Modal open={mostrar} style={BACKGROUND_STYLE}>\n        <div style={MODAL_STYLE}>\n          <div style={TITLE_STYLE}>\n            <Typography sx={{\n                color: 'font.emphasis',\n                fontSize: 23,\n                fontWeight: 550,\n                letterSpacing: 2\n            }}>\n                {'SELECIONE SEU TEMA'}\n            </Typography>\n            {/* <p>{!isVencedor ?? 'Revanche?'}</p> */}\n          </div>\n          <div style={GIF_STYLE} className='mt-4'>\n                <List\n                    sx={{\n                        borderRadius: 7,\n                        width: '100%',\n                        maxWidth: 480,\n                        position: 'relative',\n                        overflow: 'auto',\n                        maxHeight: 350,\n                        padding: 0,\n                        '& ul': { padding: 0 },\n                        mt: 0,\n                        backgroundColor: 'background.card',\n                        pb: 2,\n                        px: 2,\n                        mx: 'auto',\n                        boxShadow: 'rgba(255, 255, 255, 0.25) 0px 0px 0.25em, rgba(90, 125, 188, 0.05) 0px 0.25em 1em;'\n                    }}\n                >\n                    <ModalFichasClassicas setMostrar={setMostrar} setTemaState={setTemaState} disableButton={multiplayerEstabelecido} vsChosenTheme={vsChosenTheme} />\n                    { !usuarioTemas.loading ?\n                        usuarioTemas.data.map((item, index) => {\n                            return (\n                                <div key={`modalSelecaoDeTema-Categoria-${index}`}>\n                                    <Typography\n                                        sx={{\n                                            borderRadius: 60,\n                                            color: 'font.emphasis',\n                                            mt: 2,\n                                            backgroundColor: 'background.accordionHeader'\n                                        }}\n                                    >\n                                        {item.categoria}\n                                    </Typography>\n                                    <Grid container spacing={1} sx={{mt: 1}}>\n                                        {item.temas.map((tema, index) => {\n                                            return (\n                                                <Grid item key={`modalSelecaoDeTema-Tema-${index}`} xs={3}>\n                                                    <Box sx={{mb: 1}}>\n                                                        <Tooltip followCursor arrow title={`${tema.nome.charAt(0).toUpperCase() + tema.nome.slice(1)}`} placement=\"top\">\n                                                            <Button \n                                                                    disabled={!multiplayerEstabelecido || (vsChosenTheme === tema.nome.toLowerCase())}\n                                                                    sx={{borderRadius: 60}}\n                                                                    onClick={() => {setMostrar(false); setTemaState(geraPathTema(item, tema, basePathImages));} }\n                                                                >\n                                                                    <Avatar alt=\"\" src={retornaImagemFicha(geraPathTema(item, tema, basePathImages))}\n                                                                        sx={{border: '1px solid white',\n                                                                        color: 'font.main',\n                                                                        }}\n                                                                    />\n                                                                </Button>\n                                                                <Typography>\n                                                                    {tema.titulo}\n                                                                </Typography>\n                                                        </Tooltip>\n                                                    </Box>\n                                                </Grid>\n                                            );\n                                        })}\n                                    </Grid>\n                                </div>\n                            )\n                        })\n                        :\n                        <div key={`modalSelecaoDeTema-Carregando-Categoria`}>\n                            <Typography\n                                sx={{\n                                    borderRadius: 60,\n                                    color: 'font.emphasis',\n                                    mt: 2,\n                                    backgroundColor: 'background.accordionHeader'\n                                }}\n                            >\n                                {'Carregando...'}\n                            </Typography>\n                            <Grid container spacing={1} sx={{mt: 1, height: '150px'}}>\n                            {\n                                [0,1,2,3].map((i, j) => {return (\n                                    <Grid item key={`modalSelecaoDeTema-Carregando-Tema-${j}`} xs={3}>\n                                        <Box sx={{mb: 1}}>\n                                            <Skeleton variant=\"circular\" width={47} height={47} sx={{mx: 'auto'}} />\n                                        </Box>\n                                    </Grid>\n                                )})\n                            }\n                            </Grid>\n                        </div>\n                }\n                </List>\n          </div>\n        </div>\n      </Modal>\n    );\n};\n\nexport const geraPathTema = (item, tema, basePathImages) => {\n    let nome = tema.imagem?.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").split(' ').join('').split('-').join('').replace('.png', '')\n    return nome\n};","import { Box, Grid, Modal, Typography, Button } from '@mui/material'\nimport React from 'react'\n\nconst BACKGROUND_STYLE = {\n  position: 'fixed',\n  top: '0',\n  bottom: '0',\n  left: '0',\n  right: '0',\n  backgroundColor: 'rgb(0, 0, 0, 0.7)',\n  zIndex: '1000'\n}\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(139, 139, 139, 0.6)',\n  width: '500px',\n  height: '500px',\n  borderRadius: '21px'\n}\n\nconst TITLE_STYLE = {\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'rgba(0, 0, 0, 1)'\n}\n\nconst GIF_STYLE = {\n  textAlign: 'center',\n  paddingTop: '10px'\n}\n\nexport function ModalResultado({ mostrar, setMostrar, isVencedor, isEmpate, setLoserState, conversaComSocket }) {\n\n  const resolveClick = () => {\n    window.location.reload()\n  };\n\n    return (\n      <Modal onClose={() => setMostrar(false) } open={mostrar} style={BACKGROUND_STYLE}>\n        <div style={MODAL_STYLE}>\n          <div style={TITLE_STYLE}>\n            <h2>{isVencedor ? 'Você Venceu!' : isEmpate ? \"Empate!\" : 'Game Over!'}</h2>\n            <Typography variant='span'>{!isVencedor ?? 'Revanche?'}</Typography>\n          </div>\n          <div style={GIF_STYLE}>\n            <Typography variant='span'>ESPAÇO PARA O GIF / BOTÃO DE JOGAR NOVAMENTE</Typography>\n          </div>\n          {/* Button */}\n          <Grid container justifyContent={'center'}>\n                <Grid item xs={4.3}>\n                    <Button\n                        onClick={resolveClick}\n                        variant='contained' \n                        sx={{\n                            mx: 'auto', \n                            mt: 10, \n                            color: 'font.emphasis'\n                        }}\n                    >\n                        JOGAR NOVAMENTE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n      </Modal>\n    );\n};","import { Avatar, Button, Card, Container, Grid, Input } from \"@mui/material\";\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport { useContext, useEffect, useRef, useState } from \"react\";\n/** Socket */\nimport { ModalResultado } from \"./ModalResultado\";\nimport MultiplayerContext from \"../../../context/MultiplayerContext\";\nimport AuthContext from \"../../../context/AuthContext\";\nimport { ModalSelecaoDeTema, geraPathTema } from \"./ModalSelecaoDeTema\";\nimport { retornaImagemFicha } from \"./ImportFichas\";\n\nexport default function Tabuleiro(  ) {\n    const {\n        gameState, setGameState,\n        colunaState, setColunaState,\n        temaState, setTemaState,\n        vencedorState, setVencedorState,\n        empateState, setEmpateState,\n        loserState, setLoserState,\n        mostrarModalState, setMostrarModalState,\n        mostrarModalTemaState, setMostrarModalTemaState,\n        disabledButton,\n        socket, setSocket,\n        stopWatch, setStopWatch,\n        statusJogo, setStatusJogo,\n        myTurn, setTurn,\n        myChosenTheme, setChosenTheme,\n        // aindaEhPossivelVencer,\n        verificarEmpate,\n        verificarVitoria,\n        posicionaFichaAoFinalDaColuna,\n        encerrarJogo,\n        setMultiplayerEstabelecido, multiplayerEstabelecido,\n        vsChosenTheme, setVsChosenTheme,\n    } = useContext(MultiplayerContext);\n\n    const {userId} = useContext(AuthContext);\n\n    const [delay, setDelay] = useState(1000);\n    const [isRunning, setIsRunning] = useState(false);\n\n    useInterval(() => {\n        if (stopWatch > 0)\n            setStopWatch(stopWatch - 1);\n        else {\n            //setLoserState(true);\n            setTurn(false);\n            conversaComSocket();\n        }\n    }, isRunning ? delay : null);\n\n    useEffect(() => {\n        if (empateState || vencedorState || loserState)\n            setIsRunning(false);\n    }, [ stopWatch ])\n\n    useEffect(() => {\n        if (socket.set)\n        {\n            console.log(socket.id)\n            socket.id.on(\"msg\", (arg) => {\n                console.log('socket message:', arg); // world\n                setSocket((prev) => {return {...prev, msg: arg.tema}})\n                if (!multiplayerEstabelecido) \n                    setMultiplayerEstabelecido(true);\n                if (arg.tema !== 'escolhendo-tema')\n                    setTurn(true);\n                if (arg.tema !== '') {\n                    setVsChosenTheme(arg.tema);\n                    setIsRunning(true);\n                }\n                if (arg.gameStatus === 'loser') {\n                    setVencedorState(true);\n                    setIsRunning(false);\n                }\n                if (arg.tabuleiro !== gameState){\n                    if (arg.gameStatus === 'jogando')\n                        setTurn(true);\n                    setGameState(arg.tabuleiro);\n                    setStatusJogo(arg.gameStatus);\n                };\n                if (arg.gameStatus === 'winner') {\n                    setLoserState(true);\n                }\n            });\n        }\n    }, [])\n    \n    useEffect(() => {\n        if (multiplayerEstabelecido) conversaComSocket();\n    }, [multiplayerEstabelecido])\n\n    useEffect(() => {\n        if (statusJogo != null && statusJogo === 'winner'){\n            conversaComSocket();\n            encerrarJogo();\n        }\n        else if (statusJogo != null && statusJogo === 'empate') {\n            setEmpateState(true);\n            encerrarJogo();\n        }\n    }, [statusJogo])\n\n    useEffect(() => {\n        console.log('mudou tema');\n        if (myChosenTheme !== '' || myChosenTheme !== 'grey') conversaComSocket();\n    }, [temaState])\n\n    // Coloca timer de 45s se o Tema estiver como valor 'grey'\n    useEffect(() => {\n        console.log('mudou tema');\n        if (temaState === 'grey') {\n            setMostrarModalTemaState(true);\n        };\n    }, [temaState]);\n\n    useEffect(() => {\n        if (myTurn && (myChosenTheme !== 'grey' && myChosenTheme !== '')) {\n            setStopWatch(15);\n            setIsRunning(true);\n        }\n        else setIsRunning(false);\n    }, [myTurn]);\n\n    // Roda quando o evento do botão é gerado\n    useEffect(() => {\n        // Chama função para alocar ficha ao final da coluna selecionada\n        let novoArray = posicionaFichaAoFinalDaColuna(gameState, colunaState);\n        setTemaState(myChosenTheme);\n        setTurn(false);\n        // Chama função que envia jogada para o outro jogador\n        if (socket.set) {\n            conversaComSocket();\n        }\n\n        setColunaState(-1);\n        setGameState(novoArray);\n\n        // Roda lógica para saber se o jogador ganhou\n        setVencedorState(verificarVitoria(gameState));\n\n        // Roda lógica para saber o jogo empatou (terminou sem vitória)\n        setEmpateState(verificarEmpate(gameState));\n        //console.log(\"emapte \" + empateState);\n\n    }, [colunaState]);\n\n    // Roda quando um vencedor é determinado\n    useEffect(() => {\n        if (vencedorState) {\n            console.log(\"VITÓRIA\");\n            encerrarJogo();\n        };\n    }, [vencedorState]);\n\n    // Roda quando um empate é determinado\n    useEffect(() => {\n        if (empateState)   \n        {\n            console.log(\"EMPATE!\");\n            encerrarJogo();\n        };\n    }, [empateState]);\n\n    useEffect(() => {\n        if (loserState)   \n        {\n            console.log(\"PERDEU PLAYBAS!\");\n            conversaComSocket();\n            encerrarJogo();\n        };\n    }, [loserState]);\n\n    // Envia mensagem para Socket/Multiplayer\n    const conversaComSocket = () => {\n        console.log('mandando msg!')\n        setSocket((prev) => {return {...prev, it: (socket.it + 1)}});\n        const multiplayerState = {\n            tabuleiro: gameState,\n            tema: myChosenTheme,\n            userId: userId,\n            gameStatus: vencedorState ? 'winner' \n                : empateState ? 'empate' \n                : myChosenTheme==='grey' || myChosenTheme==='' ? 'escolhendo-tema'\n                : loserState ? 'loser'\n                : 'jogando',\n        };\n        socket.id.emit(\"msg\", multiplayerState);\n    };\n\n    useEffect(() => {\n        conversaComSocket();\n    }, [temaState]);\n\n    useEffect(() => {\n        console.log('mudou temaaaa');\n        conversaComSocket();\n    }, [myChosenTheme]);\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        console.log(e.target.value)\n        setChosenTheme(e.target.value);\n        setTemaState(e.target.value);\n    };\n\n    return (\n        <Container sx={{mx: 'auto', justifyContent: 'center'}}>  \n            {/* Linha de botões */}\n            <Grid container spacing={2} sx={{mt: 0.2, mb: 1, pl: 0.5, pr: 4}}>\n                {gameState[0].casas.map((botao, i) => {\n                    return (\n                        <Grid item key={`JogarTabuleiroArrayBotao-${i}`} xs={1} sx={{my: 0, mx: 'auto'}}>\n                            <Button \n                                disabled={\n                                    disabledButton ? \n                                        disabledButton : \n                                        myTurn ? \n                                            false : \n                                            true\n                                } \n                                onClick={() => {setColunaState(i)}}\n                                sx={{\n                                    height: '20px',\n                                    mr: 4, mt: 0,\n                                    borderRadius: '30px',\n                                    '&:hover': {\n                                        backgroundColor: 'none',\n                                        opacity: '80%',\n                                    }\n                                }}>\n                                <KeyboardDoubleArrowDownIcon sx={disabledButton ?\n                                    {\n                                        fontSize: \"30px\",\n                                        color: 'font.main',\n                                        '&:hover': {\n                                            color: 'primary.main'\n                                        }\n                                    }\n                                    : \n                                    {\n                                        fontSize: \"30px\",\n                                        color: '#5C92FF',\n                                        '&:hover': {\n                                            color: 'primary.main'\n                                        }\n                                    }\n                                }/>\n                            </Button>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n\n            {/* Tabuleiro */}\n            <Card sx={{\n                height: '515px', m: 2, \n                backgroundColor: 'background.card',\n                borderRadius: 5,\n                p: 0,\n                minWidth: '530px'\n            }}>\n                {gameState.map((item, i) => {\n                return (\n                    // LINHA DO TABULEIRO\n                    <Grid item key={`JogarTabuleiroArrayItem-${i}`} container spacing={0} sx={{mt: i===0?0:2, marginBottom: i===(gameState.length)?0:2, mx: 'auto'}}>\n                        {item.casas.map((casa, j) => {\n                        return (\n                            <Grid item key={`JogarTabuleiroArrayItem-${i}-Casa-${j}`} xs={1} sx={{my: 2, ml: 0, mx: 'auto'}}>\n                                {/* CASA DO TABULEIRO */}\n                                <Avatar alt=\"\" src={casa === 0 || casa === 'red' || casa === 'yellow' ? '' : retornaImagemFicha(casa)}\n                                    sx={{\n                                        border: '1px solid white',\n                                        color: 'font.main',\n                                        backgroundColor: casa === 0 ? casaBackgroundVazia : (casa !== 'red' && casa !== 'yellow') ? '' : casa\n                                    }}\n                                >\n                                    {''}\n                                </Avatar>\n                            </Grid>\n                        )\n                        })}\n                    </Grid>\n                )\n            })}\n            </Card>\n            <ModalResultado mostrar={mostrarModalState} setMostrar={setMostrarModalState} isVencedor={vencedorState} isEmpate={empateState} setLoserState={setLoserState} conversaComSocket={conversaComSocket} />\n            <ModalSelecaoDeTema mostrar={mostrarModalTemaState} setMostrar={setMostrarModalTemaState} setChosenState={setChosenTheme} setTemaState={setChosenTheme} vsChosenTheme={vsChosenTheme} />\n        </Container>\n    );\n};\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n  \n    useEffect(() => {\n      savedCallback.current = callback;\n    });\n  \n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n  \n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\nconst casaBackgroundVazia = 'radial-gradient(50% 50% at 50% 50%, rgba(39, 39, 39, 0) 0%, rgba(29, 28, 28, 0.72) 100%)';","import React from \"react\";\nimport Tabuleiro from \"./components/Tabuleiro\";\n\nexport default function Game(  ) {\n\n    return (\n        <Tabuleiro />\n    );\n};","import React, { useContext, useState } from \"react\";\nimport { Box, Button } from \"@mui/material\";\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\nimport Game from \"../Game\";\n// import { useNavigate } from \"react-router-dom\";\n// import {Modal} from \"@mui/material\";\nimport MultiplayerContext from \"../../context/MultiplayerContext\";\nimport icon from './../../static/images/icon/logo192.png'\n\n\nexport default function Home(  ) {\n    const [open, setOpen] = useState(true)\n\n    const {\n        iniciandoSocket\n    } = useContext(MultiplayerContext)\n\n    const onClickFunction = () => {\n        setOpen(false);\n        iniciandoSocket();\n    }\n\n    return (\n        <>\n        { \n        open ?\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    width: 500,\n                    height: 500,\n                    bgcolor: 'background.paper',\n                    border: '2px solid #000',\n                    boxShadow: 24,\n                    p: 4,\n                    borderRadius: 40,\n                    '&:hover': {\n                        color: 'font.main',\n                        opacity: '80%',\n                    }\n                }}\n            >\n                <Button \n                    onClick={() => onClickFunction()}\n                    sx={{\n                        borderRadius: 50,\n                        position: 'absolute',\n                        top: '25%',\n                        left: '27%',\n                    }}\n                >\n                    <PlayCircleIcon sx={{fontSize: 200,\n                        '&:hover': {\n                            color: 'font.emphasis',\n                            opacity: '80%',\n                    }}} />\n                </Button>\n            </Box>\n        :\n            <Game />\n        }   \n        </>\n        \n    );\n};","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 6.41 16.59 5 12 9.58 7.41 5 6 6.41l6 6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m18 13-1.41-1.41L12 16.17l-4.59-4.58L6 13l6 6z\"\n}, \"1\")], 'KeyboardDoubleArrowDown');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.5 16.5v-9l7 4.5-7 4.5z\"\n}), 'PlayCircle');\nexports.default = _default;"],"names":["retornaImagemFicha","nome","rey","jedi","luke","ahsoka","grogu","galacticempirelogo","rebellogo","darthvader","chewbaca","virgem","leao","cancer","gemeos","aries","touro","aquario","peixes","capricornio","sagitario","escorpiao","libra","natalatt","verao","pascoa","halloween","lufalufa","corvinal","sonserina","grifinoria","saopaulo","santos","corinthians","palmeiras","worf","troi","crusher","data","laforge","picard","riker","trek1","trek2","trek3","dragonballz","esferadodragao","radardodragao","uniformedesongoku","uzumaki","sharigansasuke","uchiha","sharigankakashi","angemon","tailmon","digivice","agumon","vaporeon","pokebola","pikachu","charizard","homemdeferro","homemaranha","capitaoamericaatt","marvelatt","batman","superman","flash","dccomicsatt","ModalFichasClassicas","_ref","setMostrar","setTemaState","disableButton","vsChosenTheme","_jsxs","children","_jsx","Typography","sx","borderRadius","color","mt","backgroundColor","Grid","container","justifyContent","spacing","map","tema","index","item","xs","Box","mb","Tooltip","followCursor","arrow","title","concat","charAt","toUpperCase","slice","placement","Button","disabled","onClick","Avatar","alt","border","BACKGROUND_STYLE","position","top","bottom","left","right","zIndex","MODAL_STYLE","transform","width","height","TITLE_STYLE","textAlign","marginTop","GIF_STYLE","paddingTop","ModalSelecaoDeTema","mostrar","setChosenState","console","log","basePathImages","ConsultaUsuarioTemas","usuarioTemas","setOpenNotificacao","useContext","AuthContext","multiplayerEstabelecido","MultiplayerContext","useEffect","msg","open","severity","Modal","style","fontSize","fontWeight","letterSpacing","className","List","maxWidth","overflow","maxHeight","padding","pb","px","mx","boxShadow","loading","i","j","Skeleton","variant","categoria","temas","toLowerCase","geraPathTema","src","titulo","_tema$imagem","imagem","normalize","replace","split","join","ModalResultado","_isVencedor","isVencedor","isEmpate","setLoserState","conversaComSocket","onClose","resolveClick","window","location","reload","Tabuleiro","gameState","setGameState","colunaState","setColunaState","temaState","vencedorState","setVencedorState","empateState","setEmpateState","loserState","mostrarModalState","setMostrarModalState","mostrarModalTemaState","setMostrarModalTemaState","disabledButton","socket","setSocket","stopWatch","setStopWatch","statusJogo","setStatusJogo","myTurn","setTurn","myChosenTheme","setChosenTheme","verificarEmpate","verificarVitoria","posicionaFichaAoFinalDaColuna","encerrarJogo","setMultiplayerEstabelecido","setVsChosenTheme","userId","delay","setDelay","useState","isRunning","setIsRunning","callback","savedCallback","useRef","current","tick","id","setInterval","clearInterval","useInterval","set","on","arg","prev","gameStatus","tabuleiro","novoArray","it","multiplayerState","emit","Container","pl","pr","casas","botao","my","mr","opacity","KeyboardDoubleArrowDownIcon","Card","m","p","minWidth","marginBottom","length","casa","ml","casaBackgroundVazia","Game","Home","setOpen","iniciandoSocket","_Fragment","bgcolor","PlayCircleIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}